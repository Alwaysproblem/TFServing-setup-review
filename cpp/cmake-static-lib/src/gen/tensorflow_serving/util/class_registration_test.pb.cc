// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/class_registration_test.proto

#include "tensorflow_serving/util/class_registration_test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace tensorflow {
namespace serving {
class Config1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Config1> _instance;
} _Config1_default_instance_;
class Config2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Config2> _instance;
} _Config2_default_instance_;
class MessageWithAnyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageWithAny> _instance;
} _MessageWithAny_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static void InitDefaultsscc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_Config1_default_instance_;
    new (ptr) ::tensorflow::serving::Config1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::Config1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_Config2_default_instance_;
    new (ptr) ::tensorflow::serving::Config2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::Config2::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_MessageWithAny_default_instance_;
    new (ptr) ::tensorflow::serving::MessageWithAny();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::MessageWithAny::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Config1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Config1, string_field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Config2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Config2, string_field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MessageWithAny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MessageWithAny, any_field_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::Config1)},
  { 6, -1, sizeof(::tensorflow::serving::Config2)},
  { 12, -1, sizeof(::tensorflow::serving::MessageWithAny)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_Config1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_Config2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_MessageWithAny_default_instance_),
};

const char descriptor_table_protodef_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n5tensorflow_serving/util/class_registra"
  "tion_test.proto\022\022tensorflow.serving\032\031goo"
  "gle/protobuf/any.proto\"\037\n\007Config1\022\024\n\014str"
  "ing_field\030\001 \001(\t\"\037\n\007Config2\022\024\n\014string_fie"
  "ld\030\001 \001(\t\"9\n\016MessageWithAny\022\'\n\tany_field\030"
  "\001 \001(\0132\024.google.protobuf.Anyb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_sccs[3] = {
  &scc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base,
  &scc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base,
  &scc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto = {
  false, false, descriptor_table_protodef_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto, "tensorflow_serving/util/class_registration_test.proto", 235,
  &descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_once, descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_sccs, descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::offsets,
  file_level_metadata_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto, 3, file_level_enum_descriptors_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto, file_level_service_descriptors_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto)), true);
namespace tensorflow {
namespace serving {

// ===================================================================

void Config1::InitAsDefaultInstance() {
}
class Config1::_Internal {
 public:
};

Config1::Config1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.Config1)
}
Config1::Config1(const Config1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  string_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_string_field().empty()) {
    string_field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_string_field(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config1)
}

void Config1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  string_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Config1::~Config1() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Config1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  string_field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Config1::ArenaDtor(void* object) {
  Config1* _this = reinterpret_cast< Config1* >(object);
  (void)_this;
}
void Config1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Config1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Config1& Config1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Config1_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  return *internal_default_instance();
}


void Config1::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_field_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Config1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string string_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_string_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.serving.Config1.string_field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Config1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_field().data(), static_cast<int>(this->_internal_string_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config1.string_field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_string_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config1)
  return target;
}

size_t Config1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_string_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config1)
  GOOGLE_DCHECK_NE(&from, this);
  const Config1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Config1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config1)
    MergeFrom(*source);
  }
}

void Config1::MergeFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.string_field().size() > 0) {
    _internal_set_string_field(from._internal_string_field());
  }
}

void Config1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config1::CopyFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config1::IsInitialized() const {
  return true;
}

void Config1::InternalSwap(Config1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  string_field_.Swap(&other->string_field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Config1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Config2::InitAsDefaultInstance() {
}
class Config2::_Internal {
 public:
};

Config2::Config2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.Config2)
}
Config2::Config2(const Config2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  string_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_string_field().empty()) {
    string_field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_string_field(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config2)
}

void Config2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  string_field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Config2::~Config2() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Config2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  string_field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Config2::ArenaDtor(void* object) {
  Config2* _this = reinterpret_cast< Config2* >(object);
  (void)_this;
}
void Config2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Config2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Config2& Config2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Config2_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  return *internal_default_instance();
}


void Config2::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_field_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Config2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string string_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_string_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.serving.Config2.string_field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Config2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_field().data(), static_cast<int>(this->_internal_string_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config2.string_field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_string_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config2)
  return target;
}

size_t Config2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_string_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config2)
  GOOGLE_DCHECK_NE(&from, this);
  const Config2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Config2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config2)
    MergeFrom(*source);
  }
}

void Config2::MergeFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.string_field().size() > 0) {
    _internal_set_string_field(from._internal_string_field());
  }
}

void Config2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config2::CopyFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config2::IsInitialized() const {
  return true;
}

void Config2::InternalSwap(Config2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  string_field_.Swap(&other->string_field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Config2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageWithAny::InitAsDefaultInstance() {
  ::tensorflow::serving::_MessageWithAny_default_instance_._instance.get_mutable()->any_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class MessageWithAny::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& any_field(const MessageWithAny* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
MessageWithAny::_Internal::any_field(const MessageWithAny* msg) {
  return *msg->any_field_;
}
void MessageWithAny::clear_any_field() {
  if (GetArena() == nullptr && any_field_ != nullptr) {
    delete any_field_;
  }
  any_field_ = nullptr;
}
MessageWithAny::MessageWithAny(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.MessageWithAny)
}
MessageWithAny::MessageWithAny(const MessageWithAny& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_any_field()) {
    any_field_ = new PROTOBUF_NAMESPACE_ID::Any(*from.any_field_);
  } else {
    any_field_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.MessageWithAny)
}

void MessageWithAny::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  any_field_ = nullptr;
}

MessageWithAny::~MessageWithAny() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.MessageWithAny)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageWithAny::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete any_field_;
}

void MessageWithAny::ArenaDtor(void* object) {
  MessageWithAny* _this = reinterpret_cast< MessageWithAny* >(object);
  (void)_this;
}
void MessageWithAny::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageWithAny::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageWithAny& MessageWithAny::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageWithAny_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto.base);
  return *internal_default_instance();
}


void MessageWithAny::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.MessageWithAny)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && any_field_ != nullptr) {
    delete any_field_;
  }
  any_field_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageWithAny::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_any_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageWithAny::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.MessageWithAny)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::any_field(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.MessageWithAny)
  return target;
}

size_t MessageWithAny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.MessageWithAny)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *any_field_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageWithAny::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.MessageWithAny)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageWithAny* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageWithAny>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.MessageWithAny)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.MessageWithAny)
    MergeFrom(*source);
  }
}

void MessageWithAny::MergeFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.MessageWithAny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_any_field()) {
    _internal_mutable_any_field()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_any_field());
  }
}

void MessageWithAny::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageWithAny::CopyFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageWithAny::IsInitialized() const {
  return true;
}

void MessageWithAny::InternalSwap(MessageWithAny* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(any_field_, other->any_field_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageWithAny::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::Config1* Arena::CreateMaybeMessage< ::tensorflow::serving::Config1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::Config1 >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::Config2* Arena::CreateMaybeMessage< ::tensorflow::serving::Config2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::Config2 >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::MessageWithAny* Arena::CreateMaybeMessage< ::tensorflow::serving::MessageWithAny >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::MessageWithAny >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
