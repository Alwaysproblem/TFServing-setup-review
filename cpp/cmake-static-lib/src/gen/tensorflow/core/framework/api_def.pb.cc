// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/api_def.proto

#include "tensorflow/core/framework/api_def.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto;
namespace tensorflow {
class ApiDef_EndpointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApiDef_Endpoint> _instance;
} _ApiDef_Endpoint_default_instance_;
class ApiDef_ArgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApiDef_Arg> _instance;
} _ApiDef_Arg_default_instance_;
class ApiDef_AttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApiDef_Attr> _instance;
} _ApiDef_Attr_default_instance_;
class ApiDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApiDef> _instance;
} _ApiDef_default_instance_;
class ApiDefsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApiDefs> _instance;
} _ApiDefs_default_instance_;
}  // namespace tensorflow
static void InitDefaultsscc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ApiDef_default_instance_;
    new (ptr) ::tensorflow::ApiDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ApiDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto}, {
      &scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
      &scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
      &scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,}};

static void InitDefaultsscc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ApiDef_Arg_default_instance_;
    new (ptr) ::tensorflow::ApiDef_Arg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ApiDef_Arg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto}, {}};

static void InitDefaultsscc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ApiDef_Attr_default_instance_;
    new (ptr) ::tensorflow::ApiDef_Attr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ApiDef_Attr::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto}, {
      &scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto.base,}};

static void InitDefaultsscc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ApiDef_Endpoint_default_instance_;
    new (ptr) ::tensorflow::ApiDef_Endpoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ApiDef_Endpoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto}, {}};

static void InitDefaultsscc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ApiDefs_default_instance_;
    new (ptr) ::tensorflow::ApiDefs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ApiDefs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto}, {
      &scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, deprecated_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, deprecation_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, rename_to_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, rename_to_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, default_value_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, graph_op_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, deprecation_message_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, deprecation_version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, visibility_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, endpoint_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, in_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, out_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, arg_order_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, summary_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, description_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, description_prefix_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, description_suffix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDefs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDefs, op_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::ApiDef_Endpoint)},
  { 8, -1, sizeof(::tensorflow::ApiDef_Arg)},
  { 16, -1, sizeof(::tensorflow::ApiDef_Attr)},
  { 25, -1, sizeof(::tensorflow::ApiDef)},
  { 43, -1, sizeof(::tensorflow::ApiDefs)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ApiDef_Endpoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ApiDef_Arg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ApiDef_Attr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ApiDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ApiDefs_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'tensorflow/core/framework/api_def.prot"
  "o\022\ntensorflow\032*tensorflow/core/framework"
  "/attr_value.proto\"\341\005\n\006ApiDef\022\025\n\rgraph_op"
  "_name\030\001 \001(\t\022\033\n\023deprecation_message\030\014 \001(\t"
  "\022\033\n\023deprecation_version\030\r \001(\005\0221\n\nvisibil"
  "ity\030\002 \001(\0162\035.tensorflow.ApiDef.Visibility"
  "\022-\n\010endpoint\030\003 \003(\0132\033.tensorflow.ApiDef.E"
  "ndpoint\022&\n\006in_arg\030\004 \003(\0132\026.tensorflow.Api"
  "Def.Arg\022\'\n\007out_arg\030\005 \003(\0132\026.tensorflow.Ap"
  "iDef.Arg\022\021\n\targ_order\030\013 \003(\t\022%\n\004attr\030\006 \003("
  "\0132\027.tensorflow.ApiDef.Attr\022\017\n\007summary\030\007 "
  "\001(\t\022\023\n\013description\030\010 \001(\t\022\032\n\022description_"
  "prefix\030\t \001(\t\022\032\n\022description_suffix\030\n \001(\t"
  "\032I\n\010Endpoint\022\014\n\004name\030\001 \001(\t\022\022\n\ndeprecated"
  "\030\003 \001(\010\022\033\n\023deprecation_version\030\004 \001(\005\032;\n\003A"
  "rg\022\014\n\004name\030\001 \001(\t\022\021\n\trename_to\030\002 \001(\t\022\023\n\013d"
  "escription\030\003 \001(\t\032j\n\004Attr\022\014\n\004name\030\001 \001(\t\022\021"
  "\n\trename_to\030\002 \001(\t\022,\n\rdefault_value\030\003 \001(\013"
  "2\025.tensorflow.AttrValue\022\023\n\013description\030\004"
  " \001(\t\"G\n\nVisibility\022\026\n\022DEFAULT_VISIBILITY"
  "\020\000\022\013\n\007VISIBLE\020\001\022\010\n\004SKIP\020\002\022\n\n\006HIDDEN\020\003\")\n"
  "\007ApiDefs\022\036\n\002op\030\001 \003(\0132\022.tensorflow.ApiDef"
  "B}\n\030org.tensorflow.frameworkB\014ApiDefProt"
  "osP\001ZNgithub.com/tensorflow/tensorflow/t"
  "ensorflow/go/core/framework/api_def_go_p"
  "roto\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_deps[1] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_sccs[5] = {
  &scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
  &scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
  &scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
  &scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
  &scc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto = {
  false, false, descriptor_table_protodef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto, "tensorflow/core/framework/api_def.proto", 1015,
  &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto, 5, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto)), true);
namespace tensorflow {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApiDef_Visibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[0];
}
bool ApiDef_Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ApiDef_Visibility ApiDef::DEFAULT_VISIBILITY;
constexpr ApiDef_Visibility ApiDef::VISIBLE;
constexpr ApiDef_Visibility ApiDef::SKIP;
constexpr ApiDef_Visibility ApiDef::HIDDEN;
constexpr ApiDef_Visibility ApiDef::Visibility_MIN;
constexpr ApiDef_Visibility ApiDef::Visibility_MAX;
constexpr int ApiDef::Visibility_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ApiDef_Endpoint::InitAsDefaultInstance() {
}
class ApiDef_Endpoint::_Internal {
 public:
};

ApiDef_Endpoint::ApiDef_Endpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Endpoint)
}
ApiDef_Endpoint::ApiDef_Endpoint(const ApiDef_Endpoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&deprecated_, &from.deprecated_,
    static_cast<size_t>(reinterpret_cast<char*>(&deprecation_version_) -
    reinterpret_cast<char*>(&deprecated_)) + sizeof(deprecation_version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Endpoint)
}

void ApiDef_Endpoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&deprecated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecation_version_) -
      reinterpret_cast<char*>(&deprecated_)) + sizeof(deprecation_version_));
}

ApiDef_Endpoint::~ApiDef_Endpoint() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Endpoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApiDef_Endpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApiDef_Endpoint::ArenaDtor(void* object) {
  ApiDef_Endpoint* _this = reinterpret_cast< ApiDef_Endpoint* >(object);
  (void)_this;
}
void ApiDef_Endpoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApiDef_Endpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiDef_Endpoint& ApiDef_Endpoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApiDef_Endpoint_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  return *internal_default_instance();
}


void ApiDef_Endpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Endpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&deprecated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecation_version_) -
      reinterpret_cast<char*>(&deprecated_)) + sizeof(deprecation_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Endpoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Endpoint.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool deprecated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          deprecated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 deprecation_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          deprecation_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApiDef_Endpoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Endpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Endpoint.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool deprecated = 3;
  if (this->deprecated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_deprecated(), target);
  }

  // int32 deprecation_version = 4;
  if (this->deprecation_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_deprecation_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Endpoint)
  return target;
}

size_t ApiDef_Endpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Endpoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool deprecated = 3;
  if (this->deprecated() != 0) {
    total_size += 1 + 1;
  }

  // int32 deprecation_version = 4;
  if (this->deprecation_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_deprecation_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiDef_Endpoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ApiDef.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiDef_Endpoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApiDef_Endpoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ApiDef.Endpoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ApiDef.Endpoint)
    MergeFrom(*source);
  }
}

void ApiDef_Endpoint::MergeFrom(const ApiDef_Endpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.deprecated() != 0) {
    _internal_set_deprecated(from._internal_deprecated());
  }
  if (from.deprecation_version() != 0) {
    _internal_set_deprecation_version(from._internal_deprecation_version());
  }
}

void ApiDef_Endpoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ApiDef.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiDef_Endpoint::CopyFrom(const ApiDef_Endpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Endpoint::IsInitialized() const {
  return true;
}

void ApiDef_Endpoint::InternalSwap(ApiDef_Endpoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiDef_Endpoint, deprecation_version_)
      + sizeof(ApiDef_Endpoint::deprecation_version_)
      - PROTOBUF_FIELD_OFFSET(ApiDef_Endpoint, deprecated_)>(
          reinterpret_cast<char*>(&deprecated_),
          reinterpret_cast<char*>(&other->deprecated_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Endpoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApiDef_Arg::InitAsDefaultInstance() {
}
class ApiDef_Arg::_Internal {
 public:
};

ApiDef_Arg::ApiDef_Arg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Arg)
}
ApiDef_Arg::ApiDef_Arg(const ApiDef_Arg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  rename_to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rename_to().empty()) {
    rename_to_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rename_to(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Arg)
}

void ApiDef_Arg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rename_to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ApiDef_Arg::~ApiDef_Arg() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Arg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApiDef_Arg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rename_to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApiDef_Arg::ArenaDtor(void* object) {
  ApiDef_Arg* _this = reinterpret_cast< ApiDef_Arg* >(object);
  (void)_this;
}
void ApiDef_Arg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApiDef_Arg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiDef_Arg& ApiDef_Arg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApiDef_Arg_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  return *internal_default_instance();
}


void ApiDef_Arg::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Arg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rename_to_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Arg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Arg.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rename_to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rename_to();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Arg.rename_to"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Arg.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApiDef_Arg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Arg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string rename_to = 2;
  if (this->rename_to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rename_to().data(), static_cast<int>(this->_internal_rename_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.rename_to");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rename_to(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Arg)
  return target;
}

size_t ApiDef_Arg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Arg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string rename_to = 2;
  if (this->rename_to().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rename_to());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiDef_Arg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ApiDef.Arg)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiDef_Arg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApiDef_Arg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ApiDef.Arg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ApiDef.Arg)
    MergeFrom(*source);
  }
}

void ApiDef_Arg::MergeFrom(const ApiDef_Arg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Arg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.rename_to().size() > 0) {
    _internal_set_rename_to(from._internal_rename_to());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void ApiDef_Arg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ApiDef.Arg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiDef_Arg::CopyFrom(const ApiDef_Arg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Arg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Arg::IsInitialized() const {
  return true;
}

void ApiDef_Arg::InternalSwap(ApiDef_Arg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rename_to_.Swap(&other->rename_to_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Arg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApiDef_Attr::InitAsDefaultInstance() {
  ::tensorflow::_ApiDef_Attr_default_instance_._instance.get_mutable()->default_value_ = const_cast< ::tensorflow::AttrValue*>(
      ::tensorflow::AttrValue::internal_default_instance());
}
class ApiDef_Attr::_Internal {
 public:
  static const ::tensorflow::AttrValue& default_value(const ApiDef_Attr* msg);
};

const ::tensorflow::AttrValue&
ApiDef_Attr::_Internal::default_value(const ApiDef_Attr* msg) {
  return *msg->default_value_;
}
void ApiDef_Attr::clear_default_value() {
  if (GetArena() == nullptr && default_value_ != nullptr) {
    delete default_value_;
  }
  default_value_ = nullptr;
}
ApiDef_Attr::ApiDef_Attr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Attr)
}
ApiDef_Attr::ApiDef_Attr(const ApiDef_Attr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  rename_to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rename_to().empty()) {
    rename_to_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rename_to(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_default_value()) {
    default_value_ = new ::tensorflow::AttrValue(*from.default_value_);
  } else {
    default_value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Attr)
}

void ApiDef_Attr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rename_to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_value_ = nullptr;
}

ApiDef_Attr::~ApiDef_Attr() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Attr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApiDef_Attr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rename_to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_value_;
}

void ApiDef_Attr::ArenaDtor(void* object) {
  ApiDef_Attr* _this = reinterpret_cast< ApiDef_Attr* >(object);
  (void)_this;
}
void ApiDef_Attr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApiDef_Attr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiDef_Attr& ApiDef_Attr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApiDef_Attr_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  return *internal_default_instance();
}


void ApiDef_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Attr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rename_to_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && default_value_ != nullptr) {
    delete default_value_;
  }
  default_value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Attr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Attr.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rename_to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rename_to();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Attr.rename_to"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.AttrValue default_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.Attr.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApiDef_Attr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Attr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string rename_to = 2;
  if (this->rename_to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rename_to().data(), static_cast<int>(this->_internal_rename_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.rename_to");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rename_to(), target);
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->has_default_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_value(this), target, stream);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Attr)
  return target;
}

size_t ApiDef_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Attr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string rename_to = 2;
  if (this->rename_to().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rename_to());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->has_default_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiDef_Attr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ApiDef.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiDef_Attr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApiDef_Attr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ApiDef.Attr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ApiDef.Attr)
    MergeFrom(*source);
  }
}

void ApiDef_Attr::MergeFrom(const ApiDef_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.rename_to().size() > 0) {
    _internal_set_rename_to(from._internal_rename_to());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_default_value()) {
    _internal_mutable_default_value()->::tensorflow::AttrValue::MergeFrom(from._internal_default_value());
  }
}

void ApiDef_Attr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ApiDef.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiDef_Attr::CopyFrom(const ApiDef_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Attr::IsInitialized() const {
  return true;
}

void ApiDef_Attr::InternalSwap(ApiDef_Attr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rename_to_.Swap(&other->rename_to_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(default_value_, other->default_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Attr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApiDef::InitAsDefaultInstance() {
}
class ApiDef::_Internal {
 public:
};

ApiDef::ApiDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  endpoint_(arena),
  in_arg_(arena),
  out_arg_(arena),
  attr_(arena),
  arg_order_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef)
}
ApiDef::ApiDef(const ApiDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      endpoint_(from.endpoint_),
      in_arg_(from.in_arg_),
      out_arg_(from.out_arg_),
      attr_(from.attr_),
      arg_order_(from.arg_order_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  graph_op_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_graph_op_name().empty()) {
    graph_op_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_graph_op_name(),
      GetArena());
  }
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_summary().empty()) {
    summary_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_summary(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  description_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description_prefix().empty()) {
    description_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description_prefix(),
      GetArena());
  }
  description_suffix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description_suffix().empty()) {
    description_suffix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description_suffix(),
      GetArena());
  }
  deprecation_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_deprecation_message().empty()) {
    deprecation_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_deprecation_message(),
      GetArena());
  }
  ::memcpy(&visibility_, &from.visibility_,
    static_cast<size_t>(reinterpret_cast<char*>(&deprecation_version_) -
    reinterpret_cast<char*>(&visibility_)) + sizeof(deprecation_version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef)
}

void ApiDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  graph_op_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_suffix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deprecation_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&visibility_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecation_version_) -
      reinterpret_cast<char*>(&visibility_)) + sizeof(deprecation_version_));
}

ApiDef::~ApiDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApiDef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  graph_op_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_suffix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deprecation_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApiDef::ArenaDtor(void* object) {
  ApiDef* _this = reinterpret_cast< ApiDef* >(object);
  (void)_this;
}
void ApiDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApiDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiDef& ApiDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApiDef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  return *internal_default_instance();
}


void ApiDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endpoint_.Clear();
  in_arg_.Clear();
  out_arg_.Clear();
  attr_.Clear();
  arg_order_.Clear();
  graph_op_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  summary_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_prefix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_suffix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  deprecation_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&visibility_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecation_version_) -
      reinterpret_cast<char*>(&visibility_)) + sizeof(deprecation_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string graph_op_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_graph_op_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.graph_op_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.ApiDef.Visibility visibility = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::tensorflow::ApiDef_Visibility>(val));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_endpoint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Arg in_arg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_in_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Arg out_arg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_out_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Attr attr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // string summary = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_summary();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.summary"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description_prefix = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_description_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.description_prefix"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description_suffix = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_description_suffix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.description_suffix"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string arg_order = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_arg_order();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.arg_order"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // string deprecation_message = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_deprecation_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.ApiDef.deprecation_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 deprecation_version = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          deprecation_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApiDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_op_name = 1;
  if (this->graph_op_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_graph_op_name().data(), static_cast<int>(this->_internal_graph_op_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.graph_op_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_graph_op_name(), target);
  }

  // .tensorflow.ApiDef.Visibility visibility = 2;
  if (this->visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_visibility(), target);
  }

  // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_endpoint_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_endpoint(i), target, stream);
  }

  // repeated .tensorflow.ApiDef.Arg in_arg = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_in_arg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_in_arg(i), target, stream);
  }

  // repeated .tensorflow.ApiDef.Arg out_arg = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_out_arg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_out_arg(i), target, stream);
  }

  // repeated .tensorflow.ApiDef.Attr attr = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_attr(i), target, stream);
  }

  // string summary = 7;
  if (this->summary().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_summary().data(), static_cast<int>(this->_internal_summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.summary");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_summary(), target);
  }

  // string description = 8;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_description(), target);
  }

  // string description_prefix = 9;
  if (this->description_prefix().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description_prefix().data(), static_cast<int>(this->_internal_description_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description_prefix");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_description_prefix(), target);
  }

  // string description_suffix = 10;
  if (this->description_suffix().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description_suffix().data(), static_cast<int>(this->_internal_description_suffix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description_suffix");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_description_suffix(), target);
  }

  // repeated string arg_order = 11;
  for (int i = 0, n = this->_internal_arg_order_size(); i < n; i++) {
    const auto& s = this->_internal_arg_order(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.arg_order");
    target = stream->WriteString(11, s, target);
  }

  // string deprecation_message = 12;
  if (this->deprecation_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_deprecation_message().data(), static_cast<int>(this->_internal_deprecation_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.deprecation_message");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_deprecation_message(), target);
  }

  // int32 deprecation_version = 13;
  if (this->deprecation_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_deprecation_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef)
  return target;
}

size_t ApiDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
  total_size += 1UL * this->_internal_endpoint_size();
  for (const auto& msg : this->endpoint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Arg in_arg = 4;
  total_size += 1UL * this->_internal_in_arg_size();
  for (const auto& msg : this->in_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Arg out_arg = 5;
  total_size += 1UL * this->_internal_out_arg_size();
  for (const auto& msg : this->out_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Attr attr = 6;
  total_size += 1UL * this->_internal_attr_size();
  for (const auto& msg : this->attr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string arg_order = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(arg_order_.size());
  for (int i = 0, n = arg_order_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      arg_order_.Get(i));
  }

  // string graph_op_name = 1;
  if (this->graph_op_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_graph_op_name());
  }

  // string summary = 7;
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_summary());
  }

  // string description = 8;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string description_prefix = 9;
  if (this->description_prefix().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description_prefix());
  }

  // string description_suffix = 10;
  if (this->description_suffix().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description_suffix());
  }

  // string deprecation_message = 12;
  if (this->deprecation_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_deprecation_message());
  }

  // .tensorflow.ApiDef.Visibility visibility = 2;
  if (this->visibility() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  // int32 deprecation_version = 13;
  if (this->deprecation_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_deprecation_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ApiDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApiDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ApiDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ApiDef)
    MergeFrom(*source);
  }
}

void ApiDef::MergeFrom(const ApiDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endpoint_.MergeFrom(from.endpoint_);
  in_arg_.MergeFrom(from.in_arg_);
  out_arg_.MergeFrom(from.out_arg_);
  attr_.MergeFrom(from.attr_);
  arg_order_.MergeFrom(from.arg_order_);
  if (from.graph_op_name().size() > 0) {
    _internal_set_graph_op_name(from._internal_graph_op_name());
  }
  if (from.summary().size() > 0) {
    _internal_set_summary(from._internal_summary());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.description_prefix().size() > 0) {
    _internal_set_description_prefix(from._internal_description_prefix());
  }
  if (from.description_suffix().size() > 0) {
    _internal_set_description_suffix(from._internal_description_suffix());
  }
  if (from.deprecation_message().size() > 0) {
    _internal_set_deprecation_message(from._internal_deprecation_message());
  }
  if (from.visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  if (from.deprecation_version() != 0) {
    _internal_set_deprecation_version(from._internal_deprecation_version());
  }
}

void ApiDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ApiDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiDef::CopyFrom(const ApiDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef::IsInitialized() const {
  return true;
}

void ApiDef::InternalSwap(ApiDef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  endpoint_.InternalSwap(&other->endpoint_);
  in_arg_.InternalSwap(&other->in_arg_);
  out_arg_.InternalSwap(&other->out_arg_);
  attr_.InternalSwap(&other->attr_);
  arg_order_.InternalSwap(&other->arg_order_);
  graph_op_name_.Swap(&other->graph_op_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  summary_.Swap(&other->summary_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_prefix_.Swap(&other->description_prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_suffix_.Swap(&other->description_suffix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  deprecation_message_.Swap(&other->deprecation_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiDef, deprecation_version_)
      + sizeof(ApiDef::deprecation_version_)
      - PROTOBUF_FIELD_OFFSET(ApiDef, visibility_)>(
          reinterpret_cast<char*>(&visibility_),
          reinterpret_cast<char*>(&other->visibility_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApiDefs::InitAsDefaultInstance() {
}
class ApiDefs::_Internal {
 public:
};

ApiDefs::ApiDefs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  op_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDefs)
}
ApiDefs::ApiDefs(const ApiDefs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      op_(from.op_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDefs)
}

void ApiDefs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
}

ApiDefs::~ApiDefs() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDefs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApiDefs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ApiDefs::ArenaDtor(void* object) {
  ApiDefs* _this = reinterpret_cast< ApiDefs* >(object);
  (void)_this;
}
void ApiDefs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApiDefs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiDefs& ApiDefs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApiDefs_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto.base);
  return *internal_default_instance();
}


void ApiDefs::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDefs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDefs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.ApiDef op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_op(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApiDefs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDefs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_op_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_op(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDefs)
  return target;
}

size_t ApiDefs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDefs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef op = 1;
  total_size += 1UL * this->_internal_op_size();
  for (const auto& msg : this->op_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiDefs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ApiDefs)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiDefs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApiDefs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ApiDefs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ApiDefs)
    MergeFrom(*source);
  }
}

void ApiDefs::MergeFrom(const ApiDefs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDefs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_.MergeFrom(from.op_);
}

void ApiDefs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ApiDefs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiDefs::CopyFrom(const ApiDefs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDefs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDefs::IsInitialized() const {
  return true;
}

void ApiDefs::InternalSwap(ApiDefs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  op_.InternalSwap(&other->op_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDefs::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Endpoint* Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Endpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Endpoint >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Arg* Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Arg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Arg >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Attr* Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Attr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Attr >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef* Arena::CreateMaybeMessage< ::tensorflow::ApiDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDefs* Arena::CreateMaybeMessage< ::tensorflow::ApiDefs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDefs >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
