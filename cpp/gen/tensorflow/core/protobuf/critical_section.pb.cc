// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/critical_section.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/critical_section.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* CriticalSectionDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CriticalSectionDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* CriticalSectionExecutionDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CriticalSectionExecutionDef_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/protobuf/critical_section.proto");
  GOOGLE_CHECK(file != NULL);
  CriticalSectionDef_descriptor_ = file->message_type(0);
  static const int CriticalSectionDef_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionDef, critical_section_name_),
  };
  CriticalSectionDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CriticalSectionDef_descriptor_,
      CriticalSectionDef::default_instance_,
      CriticalSectionDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(CriticalSectionDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionDef, _is_default_instance_));
  CriticalSectionExecutionDef_descriptor_ = file->message_type(1);
  static const int CriticalSectionExecutionDef_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionExecutionDef, execute_in_critical_section_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionExecutionDef, exclusive_resource_access_),
  };
  CriticalSectionExecutionDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CriticalSectionExecutionDef_descriptor_,
      CriticalSectionExecutionDef::default_instance_,
      CriticalSectionExecutionDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(CriticalSectionExecutionDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionExecutionDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalSectionExecutionDef, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CriticalSectionDef_descriptor_, &CriticalSectionDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CriticalSectionExecutionDef_descriptor_, &CriticalSectionExecutionDef::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() {
  delete CriticalSectionDef::default_instance_;
  delete CriticalSectionDef_reflection_;
  delete CriticalSectionExecutionDef::default_instance_;
  delete CriticalSectionExecutionDef_reflection_;
}

void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/tensorflow/core/protobuf/critical_sect"
    "ion.proto\022\ntensorflow\"3\n\022CriticalSection"
    "Def\022\035\n\025critical_section_name\030\001 \001(\t\"j\n\033Cr"
    "iticalSectionExecutionDef\022(\n execute_in_"
    "critical_section_name\030\001 \001(\t\022!\n\031exclusive"
    "_resource_access\030\002 \001(\010B\200\001\n\030org.tensorflo"
    "w.frameworkB\025CriticalSectionProtosP\001ZHgi"
    "thub.com/tensorflow/tensorflow/tensorflo"
    "w/go/core/core_protos_go_proto\370\001\001b\006proto"
    "3", 361);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/critical_section.proto", &protobuf_RegisterTypes);
  CriticalSectionDef::default_instance_ = new CriticalSectionDef();
  CriticalSectionExecutionDef::default_instance_ = new CriticalSectionExecutionDef();
  CriticalSectionDef::default_instance_->InitAsDefaultInstance();
  CriticalSectionExecutionDef::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CriticalSectionDef::kCriticalSectionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CriticalSectionDef::CriticalSectionDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CriticalSectionDef)
}

CriticalSectionDef::CriticalSectionDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CriticalSectionDef)
}

void CriticalSectionDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CriticalSectionDef::CriticalSectionDef(const CriticalSectionDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CriticalSectionDef)
}

void CriticalSectionDef::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  critical_section_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CriticalSectionDef::~CriticalSectionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CriticalSectionDef)
  SharedDtor();
}

void CriticalSectionDef::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  critical_section_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
  }
}

void CriticalSectionDef::ArenaDtor(void* object) {
  CriticalSectionDef* _this = reinterpret_cast< CriticalSectionDef* >(object);
  (void)_this;
}
void CriticalSectionDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CriticalSectionDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CriticalSectionDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CriticalSectionDef_descriptor_;
}

const CriticalSectionDef& CriticalSectionDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto();
  return *default_instance_;
}

CriticalSectionDef* CriticalSectionDef::default_instance_ = NULL;

CriticalSectionDef* CriticalSectionDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CriticalSectionDef>(arena);
}

void CriticalSectionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CriticalSectionDef)
  critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool CriticalSectionDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CriticalSectionDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string critical_section_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_critical_section_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->critical_section_name().data(), this->critical_section_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CriticalSectionDef.critical_section_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CriticalSectionDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CriticalSectionDef)
  return false;
#undef DO_
}

void CriticalSectionDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CriticalSectionDef)
  // optional string critical_section_name = 1;
  if (this->critical_section_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->critical_section_name().data(), this->critical_section_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionDef.critical_section_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->critical_section_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CriticalSectionDef)
}

::google::protobuf::uint8* CriticalSectionDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CriticalSectionDef)
  // optional string critical_section_name = 1;
  if (this->critical_section_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->critical_section_name().data(), this->critical_section_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionDef.critical_section_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->critical_section_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CriticalSectionDef)
  return target;
}

int CriticalSectionDef::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CriticalSectionDef)
  int total_size = 0;

  // optional string critical_section_name = 1;
  if (this->critical_section_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->critical_section_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CriticalSectionDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CriticalSectionDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CriticalSectionDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CriticalSectionDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CriticalSectionDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CriticalSectionDef)
    MergeFrom(*source);
  }
}

void CriticalSectionDef::MergeFrom(const CriticalSectionDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CriticalSectionDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.critical_section_name().size() > 0) {
    set_critical_section_name(from.critical_section_name());
  }
}

void CriticalSectionDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CriticalSectionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CriticalSectionDef::CopyFrom(const CriticalSectionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CriticalSectionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalSectionDef::IsInitialized() const {

  return true;
}

void CriticalSectionDef::Swap(CriticalSectionDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CriticalSectionDef temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CriticalSectionDef::UnsafeArenaSwap(CriticalSectionDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CriticalSectionDef::InternalSwap(CriticalSectionDef* other) {
  critical_section_name_.Swap(&other->critical_section_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CriticalSectionDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CriticalSectionDef_descriptor_;
  metadata.reflection = CriticalSectionDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CriticalSectionDef

// optional string critical_section_name = 1;
void CriticalSectionDef::clear_critical_section_name() {
  critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& CriticalSectionDef::critical_section_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionDef.critical_section_name)
  return critical_section_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CriticalSectionDef::set_critical_section_name(const ::std::string& value) {
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionDef.critical_section_name)
}
 void CriticalSectionDef::set_critical_section_name(const char* value) {
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CriticalSectionDef.critical_section_name)
}
 void CriticalSectionDef::set_critical_section_name(const char* value,
    size_t size) {
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CriticalSectionDef.critical_section_name)
}
 ::std::string* CriticalSectionDef::mutable_critical_section_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionDef.critical_section_name)
  return critical_section_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* CriticalSectionDef::release_critical_section_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionDef.critical_section_name)
  
  return critical_section_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* CriticalSectionDef::unsafe_arena_release_critical_section_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CriticalSectionDef.critical_section_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return critical_section_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void CriticalSectionDef::set_allocated_critical_section_name(::std::string* critical_section_name) {
  if (critical_section_name != NULL) {
    
  } else {
    
  }
  critical_section_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), critical_section_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionDef.critical_section_name)
}
 void CriticalSectionDef::unsafe_arena_set_allocated_critical_section_name(
    ::std::string* critical_section_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (critical_section_name != NULL) {
    
  } else {
    
  }
  critical_section_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      critical_section_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CriticalSectionDef.critical_section_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CriticalSectionExecutionDef::kExecuteInCriticalSectionNameFieldNumber;
const int CriticalSectionExecutionDef::kExclusiveResourceAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CriticalSectionExecutionDef::CriticalSectionExecutionDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CriticalSectionExecutionDef)
}

CriticalSectionExecutionDef::CriticalSectionExecutionDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CriticalSectionExecutionDef)
}

void CriticalSectionExecutionDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CriticalSectionExecutionDef::CriticalSectionExecutionDef(const CriticalSectionExecutionDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CriticalSectionExecutionDef)
}

void CriticalSectionExecutionDef::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  execute_in_critical_section_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exclusive_resource_access_ = false;
}

CriticalSectionExecutionDef::~CriticalSectionExecutionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CriticalSectionExecutionDef)
  SharedDtor();
}

void CriticalSectionExecutionDef::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  execute_in_critical_section_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
  }
}

void CriticalSectionExecutionDef::ArenaDtor(void* object) {
  CriticalSectionExecutionDef* _this = reinterpret_cast< CriticalSectionExecutionDef* >(object);
  (void)_this;
}
void CriticalSectionExecutionDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CriticalSectionExecutionDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CriticalSectionExecutionDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CriticalSectionExecutionDef_descriptor_;
}

const CriticalSectionExecutionDef& CriticalSectionExecutionDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto();
  return *default_instance_;
}

CriticalSectionExecutionDef* CriticalSectionExecutionDef::default_instance_ = NULL;

CriticalSectionExecutionDef* CriticalSectionExecutionDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CriticalSectionExecutionDef>(arena);
}

void CriticalSectionExecutionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CriticalSectionExecutionDef)
  execute_in_critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  exclusive_resource_access_ = false;
}

bool CriticalSectionExecutionDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CriticalSectionExecutionDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string execute_in_critical_section_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execute_in_critical_section_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execute_in_critical_section_name().data(), this->execute_in_critical_section_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exclusive_resource_access;
        break;
      }

      // optional bool exclusive_resource_access = 2;
      case 2: {
        if (tag == 16) {
         parse_exclusive_resource_access:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclusive_resource_access_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CriticalSectionExecutionDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CriticalSectionExecutionDef)
  return false;
#undef DO_
}

void CriticalSectionExecutionDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CriticalSectionExecutionDef)
  // optional string execute_in_critical_section_name = 1;
  if (this->execute_in_critical_section_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_in_critical_section_name().data(), this->execute_in_critical_section_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->execute_in_critical_section_name(), output);
  }

  // optional bool exclusive_resource_access = 2;
  if (this->exclusive_resource_access() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->exclusive_resource_access(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CriticalSectionExecutionDef)
}

::google::protobuf::uint8* CriticalSectionExecutionDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CriticalSectionExecutionDef)
  // optional string execute_in_critical_section_name = 1;
  if (this->execute_in_critical_section_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_in_critical_section_name().data(), this->execute_in_critical_section_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->execute_in_critical_section_name(), target);
  }

  // optional bool exclusive_resource_access = 2;
  if (this->exclusive_resource_access() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->exclusive_resource_access(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CriticalSectionExecutionDef)
  return target;
}

int CriticalSectionExecutionDef::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CriticalSectionExecutionDef)
  int total_size = 0;

  // optional string execute_in_critical_section_name = 1;
  if (this->execute_in_critical_section_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execute_in_critical_section_name());
  }

  // optional bool exclusive_resource_access = 2;
  if (this->exclusive_resource_access() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CriticalSectionExecutionDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CriticalSectionExecutionDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CriticalSectionExecutionDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CriticalSectionExecutionDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CriticalSectionExecutionDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CriticalSectionExecutionDef)
    MergeFrom(*source);
  }
}

void CriticalSectionExecutionDef::MergeFrom(const CriticalSectionExecutionDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CriticalSectionExecutionDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.execute_in_critical_section_name().size() > 0) {
    set_execute_in_critical_section_name(from.execute_in_critical_section_name());
  }
  if (from.exclusive_resource_access() != 0) {
    set_exclusive_resource_access(from.exclusive_resource_access());
  }
}

void CriticalSectionExecutionDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CriticalSectionExecutionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CriticalSectionExecutionDef::CopyFrom(const CriticalSectionExecutionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CriticalSectionExecutionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalSectionExecutionDef::IsInitialized() const {

  return true;
}

void CriticalSectionExecutionDef::Swap(CriticalSectionExecutionDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CriticalSectionExecutionDef temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CriticalSectionExecutionDef::UnsafeArenaSwap(CriticalSectionExecutionDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CriticalSectionExecutionDef::InternalSwap(CriticalSectionExecutionDef* other) {
  execute_in_critical_section_name_.Swap(&other->execute_in_critical_section_name_);
  std::swap(exclusive_resource_access_, other->exclusive_resource_access_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CriticalSectionExecutionDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CriticalSectionExecutionDef_descriptor_;
  metadata.reflection = CriticalSectionExecutionDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CriticalSectionExecutionDef

// optional string execute_in_critical_section_name = 1;
void CriticalSectionExecutionDef::clear_execute_in_critical_section_name() {
  execute_in_critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& CriticalSectionExecutionDef::execute_in_critical_section_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return execute_in_critical_section_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const ::std::string& value) {
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
 void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const char* value) {
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
 void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const char* value,
    size_t size) {
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
 ::std::string* CriticalSectionExecutionDef::mutable_execute_in_critical_section_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return execute_in_critical_section_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* CriticalSectionExecutionDef::release_execute_in_critical_section_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  
  return execute_in_critical_section_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* CriticalSectionExecutionDef::unsafe_arena_release_execute_in_critical_section_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return execute_in_critical_section_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void CriticalSectionExecutionDef::set_allocated_execute_in_critical_section_name(::std::string* execute_in_critical_section_name) {
  if (execute_in_critical_section_name != NULL) {
    
  } else {
    
  }
  execute_in_critical_section_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), execute_in_critical_section_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
 void CriticalSectionExecutionDef::unsafe_arena_set_allocated_execute_in_critical_section_name(
    ::std::string* execute_in_critical_section_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (execute_in_critical_section_name != NULL) {
    
  } else {
    
  }
  execute_in_critical_section_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      execute_in_critical_section_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}

// optional bool exclusive_resource_access = 2;
void CriticalSectionExecutionDef::clear_exclusive_resource_access() {
  exclusive_resource_access_ = false;
}
 bool CriticalSectionExecutionDef::exclusive_resource_access() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
  return exclusive_resource_access_;
}
 void CriticalSectionExecutionDef::set_exclusive_resource_access(bool value) {
  
  exclusive_resource_access_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
