// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/saved_object_graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/saved_object_graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* SavedObjectGraph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedObjectGraph_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedObjectGraph_ConcreteFunctionsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SavedObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedObject_reflection_ = NULL;
struct SavedObjectOneofInstance {
  const ::tensorflow::SavedUserObject* user_object_;
  const ::tensorflow::SavedAsset* asset_;
  const ::tensorflow::SavedFunction* function_;
  const ::tensorflow::SavedVariable* variable_;
  const ::tensorflow::SavedBareConcreteFunction* bare_concrete_function_;
  const ::tensorflow::SavedConstant* constant_;
  const ::tensorflow::SavedResource* resource_;
}* SavedObject_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* SavedObject_SaveableObjectsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SavedUserObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedUserObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedAsset_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedAsset_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedFunction_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedConcreteFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedConcreteFunction_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedBareConcreteFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedBareConcreteFunction_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedVariable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedVariable_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionSpec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionSpec_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedResource_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveableObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveableObject_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/protobuf/saved_object_graph.proto");
  GOOGLE_CHECK(file != NULL);
  SavedObjectGraph_descriptor_ = file->message_type(0);
  static const int SavedObjectGraph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObjectGraph, nodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObjectGraph, concrete_functions_),
  };
  SavedObjectGraph_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedObjectGraph_descriptor_,
      SavedObjectGraph::default_instance_,
      SavedObjectGraph_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedObjectGraph),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObjectGraph, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObjectGraph, _is_default_instance_));
  SavedObjectGraph_ConcreteFunctionsEntry_descriptor_ = SavedObjectGraph_descriptor_->nested_type(0);
  SavedObject_descriptor_ = file->message_type(1);
  static const int SavedObject_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, children_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, slot_variables_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, user_object_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, asset_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, function_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, variable_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, bare_concrete_function_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, constant_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SavedObject_default_oneof_instance_, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, saveable_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, kind_),
  };
  SavedObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedObject_descriptor_,
      SavedObject::default_instance_,
      SavedObject_offsets_,
      -1,
      -1,
      -1,
      SavedObject_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, _oneof_case_[0]),
      sizeof(SavedObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedObject, _is_default_instance_));
  SavedObject_SaveableObjectsEntry_descriptor_ = SavedObject_descriptor_->nested_type(0);
  SavedUserObject_descriptor_ = file->message_type(2);
  static const int SavedUserObject_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedUserObject, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedUserObject, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedUserObject, metadata_),
  };
  SavedUserObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedUserObject_descriptor_,
      SavedUserObject::default_instance_,
      SavedUserObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedUserObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedUserObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedUserObject, _is_default_instance_));
  SavedAsset_descriptor_ = file->message_type(3);
  static const int SavedAsset_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedAsset, asset_file_def_index_),
  };
  SavedAsset_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedAsset_descriptor_,
      SavedAsset::default_instance_,
      SavedAsset_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedAsset),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedAsset, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedAsset, _is_default_instance_));
  SavedFunction_descriptor_ = file->message_type(4);
  static const int SavedFunction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedFunction, concrete_functions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedFunction, function_spec_),
  };
  SavedFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedFunction_descriptor_,
      SavedFunction::default_instance_,
      SavedFunction_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedFunction, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedFunction, _is_default_instance_));
  SavedConcreteFunction_descriptor_ = file->message_type(5);
  static const int SavedConcreteFunction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConcreteFunction, bound_inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConcreteFunction, canonicalized_input_signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConcreteFunction, output_signature_),
  };
  SavedConcreteFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedConcreteFunction_descriptor_,
      SavedConcreteFunction::default_instance_,
      SavedConcreteFunction_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedConcreteFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConcreteFunction, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConcreteFunction, _is_default_instance_));
  SavedBareConcreteFunction_descriptor_ = file->message_type(6);
  static const int SavedBareConcreteFunction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedBareConcreteFunction, concrete_function_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedBareConcreteFunction, argument_keywords_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedBareConcreteFunction, allowed_positional_arguments_),
  };
  SavedBareConcreteFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedBareConcreteFunction_descriptor_,
      SavedBareConcreteFunction::default_instance_,
      SavedBareConcreteFunction_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedBareConcreteFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedBareConcreteFunction, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedBareConcreteFunction, _is_default_instance_));
  SavedConstant_descriptor_ = file->message_type(7);
  static const int SavedConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConstant, operation_),
  };
  SavedConstant_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedConstant_descriptor_,
      SavedConstant::default_instance_,
      SavedConstant_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedConstant),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConstant, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedConstant, _is_default_instance_));
  SavedVariable_descriptor_ = file->message_type(8);
  static const int SavedVariable_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, dtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, trainable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, synchronization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, aggregation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, name_),
  };
  SavedVariable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedVariable_descriptor_,
      SavedVariable::default_instance_,
      SavedVariable_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedVariable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedVariable, _is_default_instance_));
  FunctionSpec_descriptor_ = file->message_type(9);
  static const int FunctionSpec_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionSpec, fullargspec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionSpec, is_method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionSpec, input_signature_),
  };
  FunctionSpec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FunctionSpec_descriptor_,
      FunctionSpec::default_instance_,
      FunctionSpec_offsets_,
      -1,
      -1,
      -1,
      sizeof(FunctionSpec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionSpec, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionSpec, _is_default_instance_));
  SavedResource_descriptor_ = file->message_type(10);
  static const int SavedResource_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedResource, device_),
  };
  SavedResource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavedResource_descriptor_,
      SavedResource::default_instance_,
      SavedResource_offsets_,
      -1,
      -1,
      -1,
      sizeof(SavedResource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedResource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedResource, _is_default_instance_));
  SaveableObject_descriptor_ = file->message_type(11);
  static const int SaveableObject_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveableObject, save_function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveableObject, restore_function_),
  };
  SaveableObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveableObject_descriptor_,
      SaveableObject::default_instance_,
      SaveableObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(SaveableObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveableObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveableObject, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedObjectGraph_descriptor_, &SavedObjectGraph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SavedObjectGraph_ConcreteFunctionsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::tensorflow::SavedConcreteFunction,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SavedObjectGraph_ConcreteFunctionsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedObject_descriptor_, &SavedObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SavedObject_SaveableObjectsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::tensorflow::SaveableObject,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SavedObject_SaveableObjectsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedUserObject_descriptor_, &SavedUserObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedAsset_descriptor_, &SavedAsset::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedFunction_descriptor_, &SavedFunction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedConcreteFunction_descriptor_, &SavedConcreteFunction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedBareConcreteFunction_descriptor_, &SavedBareConcreteFunction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedConstant_descriptor_, &SavedConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedVariable_descriptor_, &SavedVariable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FunctionSpec_descriptor_, &FunctionSpec::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavedResource_descriptor_, &SavedResource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveableObject_descriptor_, &SaveableObject::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  delete SavedObjectGraph::default_instance_;
  delete SavedObjectGraph_reflection_;
  delete SavedObject::default_instance_;
  delete SavedObject_default_oneof_instance_;
  delete SavedObject_reflection_;
  delete SavedUserObject::default_instance_;
  delete SavedUserObject_reflection_;
  delete SavedAsset::default_instance_;
  delete SavedAsset_reflection_;
  delete SavedFunction::default_instance_;
  delete SavedFunction_reflection_;
  delete SavedConcreteFunction::default_instance_;
  delete SavedConcreteFunction_reflection_;
  delete SavedBareConcreteFunction::default_instance_;
  delete SavedBareConcreteFunction_reflection_;
  delete SavedConstant::default_instance_;
  delete SavedConstant_reflection_;
  delete SavedVariable::default_instance_;
  delete SavedVariable_reflection_;
  delete FunctionSpec::default_instance_;
  delete FunctionSpec_reflection_;
  delete SavedResource::default_instance_;
  delete SavedResource_reflection_;
  delete SaveableObject::default_instance_;
  delete SaveableObject_reflection_;
}

void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2ftypes_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fversions_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n1tensorflow/core/protobuf/saved_object_"
    "graph.proto\022\ntensorflow\032,tensorflow/core"
    "/framework/tensor_shape.proto\032%tensorflo"
    "w/core/framework/types.proto\032(tensorflow"
    "/core/framework/variable.proto\032(tensorfl"
    "ow/core/framework/versions.proto\032%tensor"
    "flow/core/protobuf/struct.proto\0325tensorf"
    "low/core/protobuf/trackable_object_graph"
    ".proto\"\350\001\n\020SavedObjectGraph\022&\n\005nodes\030\001 \003"
    "(\0132\027.tensorflow.SavedObject\022O\n\022concrete_"
    "functions\030\002 \003(\01323.tensorflow.SavedObject"
    "Graph.ConcreteFunctionsEntry\032[\n\026Concrete"
    "FunctionsEntry\022\013\n\003key\030\001 \001(\t\0220\n\005value\030\002 \001"
    "(\0132!.tensorflow.SavedConcreteFunction:\0028"
    "\001\"\331\005\n\013SavedObject\022R\n\010children\030\001 \003(\0132@.te"
    "nsorflow.TrackableObjectGraph.TrackableO"
    "bject.ObjectReference\022^\n\016slot_variables\030"
    "\003 \003(\0132F.tensorflow.TrackableObjectGraph."
    "TrackableObject.SlotVariableReference\0222\n"
    "\013user_object\030\004 \001(\0132\033.tensorflow.SavedUse"
    "rObjectH\000\022\'\n\005asset\030\005 \001(\0132\026.tensorflow.Sa"
    "vedAssetH\000\022-\n\010function\030\006 \001(\0132\031.tensorflo"
    "w.SavedFunctionH\000\022-\n\010variable\030\007 \001(\0132\031.te"
    "nsorflow.SavedVariableH\000\022G\n\026bare_concret"
    "e_function\030\010 \001(\0132%.tensorflow.SavedBareC"
    "oncreteFunctionH\000\022-\n\010constant\030\t \001(\0132\031.te"
    "nsorflow.SavedConstantH\000\022-\n\010resource\030\n \001"
    "(\0132\031.tensorflow.SavedResourceH\000\022F\n\020savea"
    "ble_objects\030\013 \003(\0132,.tensorflow.SavedObje"
    "ct.SaveableObjectsEntry\032R\n\024SaveableObjec"
    "tsEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.te"
    "nsorflow.SaveableObject:\0028\001B\006\n\004kindJ\004\010\002\020"
    "\003R\nattributes\"`\n\017SavedUserObject\022\022\n\niden"
    "tifier\030\001 \001(\t\022\'\n\007version\030\002 \001(\0132\026.tensorfl"
    "ow.VersionDef\022\020\n\010metadata\030\003 \001(\t\"*\n\nSaved"
    "Asset\022\034\n\024asset_file_def_index\030\001 \001(\005\"\\\n\rS"
    "avedFunction\022\032\n\022concrete_functions\030\001 \003(\t"
    "\022/\n\rfunction_spec\030\002 \001(\0132\030.tensorflow.Fun"
    "ctionSpec\"\250\001\n\025SavedConcreteFunction\022\024\n\014b"
    "ound_inputs\030\002 \003(\005\022B\n\035canonicalized_input"
    "_signature\030\003 \001(\0132\033.tensorflow.Structured"
    "Value\0225\n\020output_signature\030\004 \001(\0132\033.tensor"
    "flow.StructuredValue\"|\n\031SavedBareConcret"
    "eFunction\022\036\n\026concrete_function_name\030\001 \001("
    "\t\022\031\n\021argument_keywords\030\002 \003(\t\022$\n\034allowed_"
    "positional_arguments\030\003 \001(\003\"\"\n\rSavedConst"
    "ant\022\021\n\toperation\030\001 \001(\t\"\366\001\n\rSavedVariable"
    "\022#\n\005dtype\030\001 \001(\0162\024.tensorflow.DataType\022+\n"
    "\005shape\030\002 \001(\0132\034.tensorflow.TensorShapePro"
    "to\022\021\n\ttrainable\030\003 \001(\010\022<\n\017synchronization"
    "\030\004 \001(\0162#.tensorflow.VariableSynchronizat"
    "ion\0224\n\013aggregation\030\005 \001(\0162\037.tensorflow.Va"
    "riableAggregation\022\014\n\004name\030\006 \001(\t\"\225\001\n\014Func"
    "tionSpec\0220\n\013fullargspec\030\001 \001(\0132\033.tensorfl"
    "ow.StructuredValue\022\021\n\tis_method\030\002 \001(\010\0224\n"
    "\017input_signature\030\005 \001(\0132\033.tensorflow.Stru"
    "cturedValueJ\004\010\003\020\004J\004\010\004\020\005\"\037\n\rSavedResource"
    "\022\016\n\006device\030\001 \001(\t\"A\n\016SaveableObject\022\025\n\rsa"
    "ve_function\030\002 \001(\005\022\030\n\020restore_function\030\003 "
    "\001(\005BMZHgithub.com/tensorflow/tensorflow/"
    "tensorflow/go/core/core_protos_go_proto\370"
    "\001\001b\006proto3", 2450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/saved_object_graph.proto", &protobuf_RegisterTypes);
  SavedObjectGraph::default_instance_ = new SavedObjectGraph();
  SavedObject::default_instance_ = new SavedObject();
  SavedObject_default_oneof_instance_ = new SavedObjectOneofInstance();
  SavedUserObject::default_instance_ = new SavedUserObject();
  SavedAsset::default_instance_ = new SavedAsset();
  SavedFunction::default_instance_ = new SavedFunction();
  SavedConcreteFunction::default_instance_ = new SavedConcreteFunction();
  SavedBareConcreteFunction::default_instance_ = new SavedBareConcreteFunction();
  SavedConstant::default_instance_ = new SavedConstant();
  SavedVariable::default_instance_ = new SavedVariable();
  FunctionSpec::default_instance_ = new FunctionSpec();
  SavedResource::default_instance_ = new SavedResource();
  SaveableObject::default_instance_ = new SaveableObject();
  SavedObjectGraph::default_instance_->InitAsDefaultInstance();
  SavedObject::default_instance_->InitAsDefaultInstance();
  SavedUserObject::default_instance_->InitAsDefaultInstance();
  SavedAsset::default_instance_->InitAsDefaultInstance();
  SavedFunction::default_instance_->InitAsDefaultInstance();
  SavedConcreteFunction::default_instance_->InitAsDefaultInstance();
  SavedBareConcreteFunction::default_instance_->InitAsDefaultInstance();
  SavedConstant::default_instance_->InitAsDefaultInstance();
  SavedVariable::default_instance_->InitAsDefaultInstance();
  FunctionSpec::default_instance_->InitAsDefaultInstance();
  SavedResource::default_instance_->InitAsDefaultInstance();
  SaveableObject::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedObjectGraph::kNodesFieldNumber;
const int SavedObjectGraph::kConcreteFunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedObjectGraph::SavedObjectGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedObjectGraph)
}

SavedObjectGraph::SavedObjectGraph(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  nodes_(arena),
  concrete_functions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObjectGraph)
}

void SavedObjectGraph::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SavedObjectGraph::SavedObjectGraph(const SavedObjectGraph& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObjectGraph)
}

void SavedObjectGraph::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  concrete_functions_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  concrete_functions_.SetEntryDescriptor(
      &::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_descriptor_);
}

SavedObjectGraph::~SavedObjectGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObjectGraph)
  SharedDtor();
}

void SavedObjectGraph::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void SavedObjectGraph::ArenaDtor(void* object) {
  SavedObjectGraph* _this = reinterpret_cast< SavedObjectGraph* >(object);
  (void)_this;
}
void SavedObjectGraph::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedObjectGraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedObjectGraph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedObjectGraph_descriptor_;
}

const SavedObjectGraph& SavedObjectGraph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedObjectGraph* SavedObjectGraph::default_instance_ = NULL;

SavedObjectGraph* SavedObjectGraph::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedObjectGraph>(arena);
}

void SavedObjectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObjectGraph)
  nodes_.Clear();
  concrete_functions_.Clear();
}

bool SavedObjectGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedObjectGraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.SavedObject nodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_nodes;
        if (input->ExpectTag(18)) goto parse_loop_concrete_functions;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_concrete_functions:
          SavedObjectGraph_ConcreteFunctionsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::tensorflow::SavedConcreteFunction,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction > > parser(&concrete_functions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_concrete_functions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedObjectGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedObjectGraph)
  return false;
#undef DO_
}

void SavedObjectGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedObjectGraph)
  // repeated .tensorflow.SavedObject nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(i), output);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  if (!this->concrete_functions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->concrete_functions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->concrete_functions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SavedObjectGraph_ConcreteFunctionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(concrete_functions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SavedObjectGraph_ConcreteFunctionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it) {
        entry.reset(concrete_functions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedObjectGraph)
}

::google::protobuf::uint8* SavedObjectGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObjectGraph)
  // repeated .tensorflow.SavedObject nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes(i), false, target);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  if (!this->concrete_functions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key");
      }
    };

    if (deterministic &&
        this->concrete_functions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->concrete_functions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SavedObjectGraph_ConcreteFunctionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(concrete_functions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SavedObjectGraph_ConcreteFunctionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it) {
        entry.reset(concrete_functions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObjectGraph)
  return target;
}

int SavedObjectGraph::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObjectGraph)
  int total_size = 0;

  // repeated .tensorflow.SavedObject nodes = 1;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodes(i));
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  total_size += 1 * this->concrete_functions_size();
  {
    ::google::protobuf::scoped_ptr<SavedObjectGraph_ConcreteFunctionsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
        it = this->concrete_functions().begin();
        it != this->concrete_functions().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(concrete_functions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedObjectGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedObjectGraph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedObjectGraph* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedObjectGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedObjectGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedObjectGraph)
    MergeFrom(*source);
  }
}

void SavedObjectGraph::MergeFrom(const SavedObjectGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObjectGraph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  nodes_.MergeFrom(from.nodes_);
  concrete_functions_.MergeFrom(from.concrete_functions_);
}

void SavedObjectGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedObjectGraph::CopyFrom(const SavedObjectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObjectGraph::IsInitialized() const {

  return true;
}

void SavedObjectGraph::Swap(SavedObjectGraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedObjectGraph temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedObjectGraph::UnsafeArenaSwap(SavedObjectGraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedObjectGraph::InternalSwap(SavedObjectGraph* other) {
  nodes_.UnsafeArenaSwap(&other->nodes_);
  concrete_functions_.Swap(&other->concrete_functions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedObjectGraph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedObjectGraph_descriptor_;
  metadata.reflection = SavedObjectGraph_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedObjectGraph

// repeated .tensorflow.SavedObject nodes = 1;
int SavedObjectGraph::nodes_size() const {
  return nodes_.size();
}
void SavedObjectGraph::clear_nodes() {
  nodes_.Clear();
}
const ::tensorflow::SavedObject& SavedObjectGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObjectGraph.nodes)
  return nodes_.Get(index);
}
::tensorflow::SavedObject* SavedObjectGraph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObjectGraph.nodes)
  return nodes_.Mutable(index);
}
::tensorflow::SavedObject* SavedObjectGraph::add_nodes() {
  // @@protoc_insertion_point(field_add:tensorflow.SavedObjectGraph.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::SavedObject >*
SavedObjectGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedObjectGraph.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::SavedObject >&
SavedObjectGraph::nodes() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedObjectGraph.nodes)
  return nodes_;
}

// map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
int SavedObjectGraph::concrete_functions_size() const {
  return concrete_functions_.size();
}
void SavedObjectGraph::clear_concrete_functions() {
  concrete_functions_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >&
SavedObjectGraph::concrete_functions() const {
  // @@protoc_insertion_point(field_map:tensorflow.SavedObjectGraph.concrete_functions)
  return concrete_functions_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::tensorflow::SavedConcreteFunction >*
SavedObjectGraph::mutable_concrete_functions() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.SavedObjectGraph.concrete_functions)
  return concrete_functions_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedObject::kChildrenFieldNumber;
const int SavedObject::kSlotVariablesFieldNumber;
const int SavedObject::kUserObjectFieldNumber;
const int SavedObject::kAssetFieldNumber;
const int SavedObject::kFunctionFieldNumber;
const int SavedObject::kVariableFieldNumber;
const int SavedObject::kBareConcreteFunctionFieldNumber;
const int SavedObject::kConstantFieldNumber;
const int SavedObject::kResourceFieldNumber;
const int SavedObject::kSaveableObjectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedObject::SavedObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedObject)
}

SavedObject::SavedObject(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  children_(arena),
  slot_variables_(arena),
  saveable_objects_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObject)
}

void SavedObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  SavedObject_default_oneof_instance_->user_object_ = const_cast< ::tensorflow::SavedUserObject*>(&::tensorflow::SavedUserObject::default_instance());
  SavedObject_default_oneof_instance_->asset_ = const_cast< ::tensorflow::SavedAsset*>(&::tensorflow::SavedAsset::default_instance());
  SavedObject_default_oneof_instance_->function_ = const_cast< ::tensorflow::SavedFunction*>(&::tensorflow::SavedFunction::default_instance());
  SavedObject_default_oneof_instance_->variable_ = const_cast< ::tensorflow::SavedVariable*>(&::tensorflow::SavedVariable::default_instance());
  SavedObject_default_oneof_instance_->bare_concrete_function_ = const_cast< ::tensorflow::SavedBareConcreteFunction*>(&::tensorflow::SavedBareConcreteFunction::default_instance());
  SavedObject_default_oneof_instance_->constant_ = const_cast< ::tensorflow::SavedConstant*>(&::tensorflow::SavedConstant::default_instance());
  SavedObject_default_oneof_instance_->resource_ = const_cast< ::tensorflow::SavedResource*>(&::tensorflow::SavedResource::default_instance());
}

SavedObject::SavedObject(const SavedObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObject)
}

void SavedObject::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  saveable_objects_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  saveable_objects_.SetEntryDescriptor(
      &::tensorflow::SavedObject_SaveableObjectsEntry_descriptor_);
  clear_has_kind();
}

SavedObject::~SavedObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObject)
  SharedDtor();
}

void SavedObject::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (has_kind()) {
    clear_kind();
  }
  if (this != default_instance_) {
  }
}

void SavedObject::ArenaDtor(void* object) {
  SavedObject* _this = reinterpret_cast< SavedObject* >(object);
  (void)_this;
}
void SavedObject::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedObject_descriptor_;
}

const SavedObject& SavedObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedObject* SavedObject::default_instance_ = NULL;

SavedObject* SavedObject::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedObject>(arena);
}

void SavedObject::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.SavedObject)
  switch(kind_case()) {
    case kUserObject: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.user_object_;
      }
      break;
    }
    case kAsset: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.asset_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.function_;
      }
      break;
    }
    case kVariable: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.variable_;
      }
      break;
    }
    case kBareConcreteFunction: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.bare_concrete_function_;
      }
      break;
    }
    case kConstant: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.constant_;
      }
      break;
    }
    case kResource: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.resource_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void SavedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObject)
  children_.Clear();
  slot_variables_.Clear();
  saveable_objects_.Clear();
  clear_kind();
}

bool SavedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_children:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_children;
        if (input->ExpectTag(26)) goto parse_loop_slot_variables;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_slot_variables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_slot_variables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_slot_variables;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_user_object;
        break;
      }

      // optional .tensorflow.SavedUserObject user_object = 4;
      case 4: {
        if (tag == 34) {
         parse_user_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_object()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_asset;
        break;
      }

      // optional .tensorflow.SavedAsset asset = 5;
      case 5: {
        if (tag == 42) {
         parse_asset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_function;
        break;
      }

      // optional .tensorflow.SavedFunction function = 6;
      case 6: {
        if (tag == 50) {
         parse_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_variable;
        break;
      }

      // optional .tensorflow.SavedVariable variable = 7;
      case 7: {
        if (tag == 58) {
         parse_variable:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_variable()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_bare_concrete_function;
        break;
      }

      // optional .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
      case 8: {
        if (tag == 66) {
         parse_bare_concrete_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bare_concrete_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_constant;
        break;
      }

      // optional .tensorflow.SavedConstant constant = 9;
      case 9: {
        if (tag == 74) {
         parse_constant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_resource;
        break;
      }

      // optional .tensorflow.SavedResource resource = 10;
      case 10: {
        if (tag == 82) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_saveable_objects;
        break;
      }

      // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
      case 11: {
        if (tag == 90) {
         parse_saveable_objects:
          DO_(input->IncrementRecursionDepth());
         parse_loop_saveable_objects:
          SavedObject_SaveableObjectsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::tensorflow::SaveableObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject > > parser(&saveable_objects_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedObject.SaveableObjectsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_saveable_objects;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedObject)
  return false;
#undef DO_
}

void SavedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedObject)
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->children(i), output);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0, n = this->slot_variables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slot_variables(i), output);
  }

  // optional .tensorflow.SavedUserObject user_object = 4;
  if (has_user_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *kind_.user_object_, output);
  }

  // optional .tensorflow.SavedAsset asset = 5;
  if (has_asset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *kind_.asset_, output);
  }

  // optional .tensorflow.SavedFunction function = 6;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *kind_.function_, output);
  }

  // optional .tensorflow.SavedVariable variable = 7;
  if (has_variable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *kind_.variable_, output);
  }

  // optional .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
  if (has_bare_concrete_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *kind_.bare_concrete_function_, output);
  }

  // optional .tensorflow.SavedConstant constant = 9;
  if (has_constant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *kind_.constant_, output);
  }

  // optional .tensorflow.SavedResource resource = 10;
  if (has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *kind_.resource_, output);
  }

  // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
  if (!this->saveable_objects().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObject.SaveableObjectsEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->saveable_objects().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->saveable_objects().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_iterator
          it = this->saveable_objects().begin();
          it != this->saveable_objects().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SavedObject_SaveableObjectsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(saveable_objects_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SavedObject_SaveableObjectsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_iterator
          it = this->saveable_objects().begin();
          it != this->saveable_objects().end(); ++it) {
        entry.reset(saveable_objects_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedObject)
}

::google::protobuf::uint8* SavedObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObject)
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->children(i), false, target);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0, n = this->slot_variables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->slot_variables(i), false, target);
  }

  // optional .tensorflow.SavedUserObject user_object = 4;
  if (has_user_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *kind_.user_object_, false, target);
  }

  // optional .tensorflow.SavedAsset asset = 5;
  if (has_asset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *kind_.asset_, false, target);
  }

  // optional .tensorflow.SavedFunction function = 6;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *kind_.function_, false, target);
  }

  // optional .tensorflow.SavedVariable variable = 7;
  if (has_variable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *kind_.variable_, false, target);
  }

  // optional .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
  if (has_bare_concrete_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *kind_.bare_concrete_function_, false, target);
  }

  // optional .tensorflow.SavedConstant constant = 9;
  if (has_constant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *kind_.constant_, false, target);
  }

  // optional .tensorflow.SavedResource resource = 10;
  if (has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *kind_.resource_, false, target);
  }

  // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
  if (!this->saveable_objects().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObject.SaveableObjectsEntry.key");
      }
    };

    if (deterministic &&
        this->saveable_objects().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->saveable_objects().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_iterator
          it = this->saveable_objects().begin();
          it != this->saveable_objects().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SavedObject_SaveableObjectsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(saveable_objects_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SavedObject_SaveableObjectsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_iterator
          it = this->saveable_objects().begin();
          it != this->saveable_objects().end(); ++it) {
        entry.reset(saveable_objects_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObject)
  return target;
}

int SavedObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObject)
  int total_size = 0;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  total_size += 1 * this->children_size();
  for (int i = 0; i < this->children_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->children(i));
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  total_size += 1 * this->slot_variables_size();
  for (int i = 0; i < this->slot_variables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_variables(i));
  }

  // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
  total_size += 1 * this->saveable_objects_size();
  {
    ::google::protobuf::scoped_ptr<SavedObject_SaveableObjectsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >::const_iterator
        it = this->saveable_objects().begin();
        it != this->saveable_objects().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(saveable_objects_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  switch (kind_case()) {
    // optional .tensorflow.SavedUserObject user_object = 4;
    case kUserObject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.user_object_);
      break;
    }
    // optional .tensorflow.SavedAsset asset = 5;
    case kAsset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.asset_);
      break;
    }
    // optional .tensorflow.SavedFunction function = 6;
    case kFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.function_);
      break;
    }
    // optional .tensorflow.SavedVariable variable = 7;
    case kVariable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.variable_);
      break;
    }
    // optional .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
    case kBareConcreteFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.bare_concrete_function_);
      break;
    }
    // optional .tensorflow.SavedConstant constant = 9;
    case kConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.constant_);
      break;
    }
    // optional .tensorflow.SavedResource resource = 10;
    case kResource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.resource_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedObject)
    MergeFrom(*source);
  }
}

void SavedObject::MergeFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  children_.MergeFrom(from.children_);
  slot_variables_.MergeFrom(from.slot_variables_);
  saveable_objects_.MergeFrom(from.saveable_objects_);
  switch (from.kind_case()) {
    case kUserObject: {
      mutable_user_object()->::tensorflow::SavedUserObject::MergeFrom(from.user_object());
      break;
    }
    case kAsset: {
      mutable_asset()->::tensorflow::SavedAsset::MergeFrom(from.asset());
      break;
    }
    case kFunction: {
      mutable_function()->::tensorflow::SavedFunction::MergeFrom(from.function());
      break;
    }
    case kVariable: {
      mutable_variable()->::tensorflow::SavedVariable::MergeFrom(from.variable());
      break;
    }
    case kBareConcreteFunction: {
      mutable_bare_concrete_function()->::tensorflow::SavedBareConcreteFunction::MergeFrom(from.bare_concrete_function());
      break;
    }
    case kConstant: {
      mutable_constant()->::tensorflow::SavedConstant::MergeFrom(from.constant());
      break;
    }
    case kResource: {
      mutable_resource()->::tensorflow::SavedResource::MergeFrom(from.resource());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void SavedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedObject::CopyFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObject::IsInitialized() const {

  return true;
}

void SavedObject::Swap(SavedObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedObject temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedObject::UnsafeArenaSwap(SavedObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedObject::InternalSwap(SavedObject* other) {
  children_.UnsafeArenaSwap(&other->children_);
  slot_variables_.UnsafeArenaSwap(&other->slot_variables_);
  saveable_objects_.Swap(&other->saveable_objects_);
  std::swap(kind_, other->kind_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedObject_descriptor_;
  metadata.reflection = SavedObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedObject

// repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
int SavedObject::children_size() const {
  return children_.size();
}
void SavedObject::clear_children() {
  children_.Clear();
}
const ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference& SavedObject::children(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.children)
  return children_.Get(index);
}
::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* SavedObject::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.children)
  return children_.Mutable(index);
}
::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* SavedObject::add_children() {
  // @@protoc_insertion_point(field_add:tensorflow.SavedObject.children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference >*
SavedObject::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedObject.children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference >&
SavedObject::children() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedObject.children)
  return children_;
}

// repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
int SavedObject::slot_variables_size() const {
  return slot_variables_.size();
}
void SavedObject::clear_slot_variables() {
  slot_variables_.Clear();
}
const ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference& SavedObject::slot_variables(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.slot_variables)
  return slot_variables_.Get(index);
}
::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* SavedObject::mutable_slot_variables(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.slot_variables)
  return slot_variables_.Mutable(index);
}
::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* SavedObject::add_slot_variables() {
  // @@protoc_insertion_point(field_add:tensorflow.SavedObject.slot_variables)
  return slot_variables_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference >*
SavedObject::mutable_slot_variables() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedObject.slot_variables)
  return &slot_variables_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference >&
SavedObject::slot_variables() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedObject.slot_variables)
  return slot_variables_;
}

// optional .tensorflow.SavedUserObject user_object = 4;
bool SavedObject::has_user_object() const {
  return kind_case() == kUserObject;
}
void SavedObject::set_has_user_object() {
  _oneof_case_[0] = kUserObject;
}
void SavedObject::clear_user_object() {
  if (has_user_object()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.user_object_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedUserObject& SavedObject::user_object() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.user_object)
  return has_user_object()
      ? *kind_.user_object_
      : ::tensorflow::SavedUserObject::default_instance();
}
::tensorflow::SavedUserObject* SavedObject::mutable_user_object() {
  if (!has_user_object()) {
    clear_kind();
    set_has_user_object();
    kind_.user_object_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedUserObject >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.user_object)
  return kind_.user_object_;
}
::tensorflow::SavedUserObject* SavedObject::release_user_object() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.user_object)
  if (has_user_object()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedUserObject* temp = new ::tensorflow::SavedUserObject;
      temp->MergeFrom(*kind_.user_object_);
      kind_.user_object_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedUserObject* temp = kind_.user_object_;
      kind_.user_object_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_user_object(::tensorflow::SavedUserObject* user_object) {
  clear_kind();
  if (user_object) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(user_object) == NULL) {
      GetArenaNoVirtual()->Own(user_object);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(user_object)) {
      ::tensorflow::SavedUserObject* new_user_object = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedUserObject >(
          GetArenaNoVirtual());
      new_user_object->CopyFrom(*user_object);
      user_object = new_user_object;
    }
    set_has_user_object();
    kind_.user_object_ = user_object;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.user_object)
}
 ::tensorflow::SavedUserObject* SavedObject::unsafe_arena_release_user_object() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.user_object)
  if (has_user_object()) {
    clear_has_kind();
    ::tensorflow::SavedUserObject* temp = kind_.user_object_;
    kind_.user_object_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_user_object(::tensorflow::SavedUserObject* user_object) {
  clear_kind();
  if (user_object) {
    set_has_user_object();
    kind_.user_object_ = user_object;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.user_object)
}

// optional .tensorflow.SavedAsset asset = 5;
bool SavedObject::has_asset() const {
  return kind_case() == kAsset;
}
void SavedObject::set_has_asset() {
  _oneof_case_[0] = kAsset;
}
void SavedObject::clear_asset() {
  if (has_asset()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.asset_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedAsset& SavedObject::asset() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.asset)
  return has_asset()
      ? *kind_.asset_
      : ::tensorflow::SavedAsset::default_instance();
}
::tensorflow::SavedAsset* SavedObject::mutable_asset() {
  if (!has_asset()) {
    clear_kind();
    set_has_asset();
    kind_.asset_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedAsset >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.asset)
  return kind_.asset_;
}
::tensorflow::SavedAsset* SavedObject::release_asset() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.asset)
  if (has_asset()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedAsset* temp = new ::tensorflow::SavedAsset;
      temp->MergeFrom(*kind_.asset_);
      kind_.asset_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedAsset* temp = kind_.asset_;
      kind_.asset_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_asset(::tensorflow::SavedAsset* asset) {
  clear_kind();
  if (asset) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(asset) == NULL) {
      GetArenaNoVirtual()->Own(asset);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(asset)) {
      ::tensorflow::SavedAsset* new_asset = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedAsset >(
          GetArenaNoVirtual());
      new_asset->CopyFrom(*asset);
      asset = new_asset;
    }
    set_has_asset();
    kind_.asset_ = asset;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.asset)
}
 ::tensorflow::SavedAsset* SavedObject::unsafe_arena_release_asset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.asset)
  if (has_asset()) {
    clear_has_kind();
    ::tensorflow::SavedAsset* temp = kind_.asset_;
    kind_.asset_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_asset(::tensorflow::SavedAsset* asset) {
  clear_kind();
  if (asset) {
    set_has_asset();
    kind_.asset_ = asset;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.asset)
}

// optional .tensorflow.SavedFunction function = 6;
bool SavedObject::has_function() const {
  return kind_case() == kFunction;
}
void SavedObject::set_has_function() {
  _oneof_case_[0] = kFunction;
}
void SavedObject::clear_function() {
  if (has_function()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.function_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedFunction& SavedObject::function() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.function)
  return has_function()
      ? *kind_.function_
      : ::tensorflow::SavedFunction::default_instance();
}
::tensorflow::SavedFunction* SavedObject::mutable_function() {
  if (!has_function()) {
    clear_kind();
    set_has_function();
    kind_.function_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedFunction >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.function)
  return kind_.function_;
}
::tensorflow::SavedFunction* SavedObject::release_function() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.function)
  if (has_function()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedFunction* temp = new ::tensorflow::SavedFunction;
      temp->MergeFrom(*kind_.function_);
      kind_.function_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedFunction* temp = kind_.function_;
      kind_.function_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_function(::tensorflow::SavedFunction* function) {
  clear_kind();
  if (function) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(function) == NULL) {
      GetArenaNoVirtual()->Own(function);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(function)) {
      ::tensorflow::SavedFunction* new_function = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedFunction >(
          GetArenaNoVirtual());
      new_function->CopyFrom(*function);
      function = new_function;
    }
    set_has_function();
    kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.function)
}
 ::tensorflow::SavedFunction* SavedObject::unsafe_arena_release_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.function)
  if (has_function()) {
    clear_has_kind();
    ::tensorflow::SavedFunction* temp = kind_.function_;
    kind_.function_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_function(::tensorflow::SavedFunction* function) {
  clear_kind();
  if (function) {
    set_has_function();
    kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.function)
}

// optional .tensorflow.SavedVariable variable = 7;
bool SavedObject::has_variable() const {
  return kind_case() == kVariable;
}
void SavedObject::set_has_variable() {
  _oneof_case_[0] = kVariable;
}
void SavedObject::clear_variable() {
  if (has_variable()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.variable_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedVariable& SavedObject::variable() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.variable)
  return has_variable()
      ? *kind_.variable_
      : ::tensorflow::SavedVariable::default_instance();
}
::tensorflow::SavedVariable* SavedObject::mutable_variable() {
  if (!has_variable()) {
    clear_kind();
    set_has_variable();
    kind_.variable_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedVariable >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.variable)
  return kind_.variable_;
}
::tensorflow::SavedVariable* SavedObject::release_variable() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.variable)
  if (has_variable()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedVariable* temp = new ::tensorflow::SavedVariable;
      temp->MergeFrom(*kind_.variable_);
      kind_.variable_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedVariable* temp = kind_.variable_;
      kind_.variable_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_variable(::tensorflow::SavedVariable* variable) {
  clear_kind();
  if (variable) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(variable) == NULL) {
      GetArenaNoVirtual()->Own(variable);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(variable)) {
      ::tensorflow::SavedVariable* new_variable = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedVariable >(
          GetArenaNoVirtual());
      new_variable->CopyFrom(*variable);
      variable = new_variable;
    }
    set_has_variable();
    kind_.variable_ = variable;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.variable)
}
 ::tensorflow::SavedVariable* SavedObject::unsafe_arena_release_variable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.variable)
  if (has_variable()) {
    clear_has_kind();
    ::tensorflow::SavedVariable* temp = kind_.variable_;
    kind_.variable_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_variable(::tensorflow::SavedVariable* variable) {
  clear_kind();
  if (variable) {
    set_has_variable();
    kind_.variable_ = variable;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.variable)
}

// optional .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
bool SavedObject::has_bare_concrete_function() const {
  return kind_case() == kBareConcreteFunction;
}
void SavedObject::set_has_bare_concrete_function() {
  _oneof_case_[0] = kBareConcreteFunction;
}
void SavedObject::clear_bare_concrete_function() {
  if (has_bare_concrete_function()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.bare_concrete_function_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedBareConcreteFunction& SavedObject::bare_concrete_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.bare_concrete_function)
  return has_bare_concrete_function()
      ? *kind_.bare_concrete_function_
      : ::tensorflow::SavedBareConcreteFunction::default_instance();
}
::tensorflow::SavedBareConcreteFunction* SavedObject::mutable_bare_concrete_function() {
  if (!has_bare_concrete_function()) {
    clear_kind();
    set_has_bare_concrete_function();
    kind_.bare_concrete_function_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedBareConcreteFunction >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.bare_concrete_function)
  return kind_.bare_concrete_function_;
}
::tensorflow::SavedBareConcreteFunction* SavedObject::release_bare_concrete_function() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.bare_concrete_function)
  if (has_bare_concrete_function()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedBareConcreteFunction* temp = new ::tensorflow::SavedBareConcreteFunction;
      temp->MergeFrom(*kind_.bare_concrete_function_);
      kind_.bare_concrete_function_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedBareConcreteFunction* temp = kind_.bare_concrete_function_;
      kind_.bare_concrete_function_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_bare_concrete_function(::tensorflow::SavedBareConcreteFunction* bare_concrete_function) {
  clear_kind();
  if (bare_concrete_function) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(bare_concrete_function) == NULL) {
      GetArenaNoVirtual()->Own(bare_concrete_function);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(bare_concrete_function)) {
      ::tensorflow::SavedBareConcreteFunction* new_bare_concrete_function = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedBareConcreteFunction >(
          GetArenaNoVirtual());
      new_bare_concrete_function->CopyFrom(*bare_concrete_function);
      bare_concrete_function = new_bare_concrete_function;
    }
    set_has_bare_concrete_function();
    kind_.bare_concrete_function_ = bare_concrete_function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.bare_concrete_function)
}
 ::tensorflow::SavedBareConcreteFunction* SavedObject::unsafe_arena_release_bare_concrete_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.bare_concrete_function)
  if (has_bare_concrete_function()) {
    clear_has_kind();
    ::tensorflow::SavedBareConcreteFunction* temp = kind_.bare_concrete_function_;
    kind_.bare_concrete_function_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_bare_concrete_function(::tensorflow::SavedBareConcreteFunction* bare_concrete_function) {
  clear_kind();
  if (bare_concrete_function) {
    set_has_bare_concrete_function();
    kind_.bare_concrete_function_ = bare_concrete_function;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.bare_concrete_function)
}

// optional .tensorflow.SavedConstant constant = 9;
bool SavedObject::has_constant() const {
  return kind_case() == kConstant;
}
void SavedObject::set_has_constant() {
  _oneof_case_[0] = kConstant;
}
void SavedObject::clear_constant() {
  if (has_constant()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.constant_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedConstant& SavedObject::constant() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.constant)
  return has_constant()
      ? *kind_.constant_
      : ::tensorflow::SavedConstant::default_instance();
}
::tensorflow::SavedConstant* SavedObject::mutable_constant() {
  if (!has_constant()) {
    clear_kind();
    set_has_constant();
    kind_.constant_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedConstant >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.constant)
  return kind_.constant_;
}
::tensorflow::SavedConstant* SavedObject::release_constant() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.constant)
  if (has_constant()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedConstant* temp = new ::tensorflow::SavedConstant;
      temp->MergeFrom(*kind_.constant_);
      kind_.constant_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedConstant* temp = kind_.constant_;
      kind_.constant_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_constant(::tensorflow::SavedConstant* constant) {
  clear_kind();
  if (constant) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(constant) == NULL) {
      GetArenaNoVirtual()->Own(constant);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(constant)) {
      ::tensorflow::SavedConstant* new_constant = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedConstant >(
          GetArenaNoVirtual());
      new_constant->CopyFrom(*constant);
      constant = new_constant;
    }
    set_has_constant();
    kind_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.constant)
}
 ::tensorflow::SavedConstant* SavedObject::unsafe_arena_release_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.constant)
  if (has_constant()) {
    clear_has_kind();
    ::tensorflow::SavedConstant* temp = kind_.constant_;
    kind_.constant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_constant(::tensorflow::SavedConstant* constant) {
  clear_kind();
  if (constant) {
    set_has_constant();
    kind_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.constant)
}

// optional .tensorflow.SavedResource resource = 10;
bool SavedObject::has_resource() const {
  return kind_case() == kResource;
}
void SavedObject::set_has_resource() {
  _oneof_case_[0] = kResource;
}
void SavedObject::clear_resource() {
  if (has_resource()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.resource_;
    }
    clear_has_kind();
  }
}
 const ::tensorflow::SavedResource& SavedObject::resource() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedObject.resource)
  return has_resource()
      ? *kind_.resource_
      : ::tensorflow::SavedResource::default_instance();
}
::tensorflow::SavedResource* SavedObject::mutable_resource() {
  if (!has_resource()) {
    clear_kind();
    set_has_resource();
    kind_.resource_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedResource >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedObject.resource)
  return kind_.resource_;
}
::tensorflow::SavedResource* SavedObject::release_resource() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedObject.resource)
  if (has_resource()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::SavedResource* temp = new ::tensorflow::SavedResource;
      temp->MergeFrom(*kind_.resource_);
      kind_.resource_ = NULL;
      return temp;
    } else {
      ::tensorflow::SavedResource* temp = kind_.resource_;
      kind_.resource_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void SavedObject::set_allocated_resource(::tensorflow::SavedResource* resource) {
  clear_kind();
  if (resource) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(resource) == NULL) {
      GetArenaNoVirtual()->Own(resource);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(resource)) {
      ::tensorflow::SavedResource* new_resource = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::SavedResource >(
          GetArenaNoVirtual());
      new_resource->CopyFrom(*resource);
      resource = new_resource;
    }
    set_has_resource();
    kind_.resource_ = resource;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.resource)
}
 ::tensorflow::SavedResource* SavedObject::unsafe_arena_release_resource() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedObject.resource)
  if (has_resource()) {
    clear_has_kind();
    ::tensorflow::SavedResource* temp = kind_.resource_;
    kind_.resource_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void SavedObject::unsafe_arena_set_allocated_resource(::tensorflow::SavedResource* resource) {
  clear_kind();
  if (resource) {
    set_has_resource();
    kind_.resource_ = resource;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedObject.resource)
}

// map<string, .tensorflow.SaveableObject> saveable_objects = 11;
int SavedObject::saveable_objects_size() const {
  return saveable_objects_.size();
}
void SavedObject::clear_saveable_objects() {
  saveable_objects_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >&
SavedObject::saveable_objects() const {
  // @@protoc_insertion_point(field_map:tensorflow.SavedObject.saveable_objects)
  return saveable_objects_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::tensorflow::SaveableObject >*
SavedObject::mutable_saveable_objects() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.SavedObject.saveable_objects)
  return saveable_objects_.MutableMap();
}

bool SavedObject::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
void SavedObject::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
SavedObject::KindCase SavedObject::kind_case() const {
  return SavedObject::KindCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SavedUserObject::_slow_mutable_version() {
  version_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::VersionDef >(
      GetArenaNoVirtual());
}
::tensorflow::VersionDef* SavedUserObject::_slow_release_version() {
  if (version_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::VersionDef* temp = new ::tensorflow::VersionDef;
    temp->MergeFrom(*version_);
    version_ = NULL;
    return temp;
  }
}
::tensorflow::VersionDef* SavedUserObject::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedUserObject.version)
  
  ::tensorflow::VersionDef* temp = version_;
  version_ = NULL;
  return temp;
}
void SavedUserObject::_slow_set_allocated_version(
    ::google::protobuf::Arena* message_arena, ::tensorflow::VersionDef** version) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*version) == NULL) {
      message_arena->Own(*version);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*version)) {
      ::tensorflow::VersionDef* new_version = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::VersionDef >(
            message_arena);
      new_version->CopyFrom(**version);
      *version = new_version;
    }
}
void SavedUserObject::unsafe_arena_set_allocated_version(
    ::tensorflow::VersionDef* version) {
  if (GetArenaNoVirtual() == NULL) {
    delete version_;
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedUserObject.version)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedUserObject::kIdentifierFieldNumber;
const int SavedUserObject::kVersionFieldNumber;
const int SavedUserObject::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedUserObject::SavedUserObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedUserObject)
}

SavedUserObject::SavedUserObject(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedUserObject)
}

void SavedUserObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  version_ = const_cast< ::tensorflow::VersionDef*>(&::tensorflow::VersionDef::default_instance());
}

SavedUserObject::SavedUserObject(const SavedUserObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedUserObject)
}

void SavedUserObject::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = NULL;
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SavedUserObject::~SavedUserObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedUserObject)
  SharedDtor();
}

void SavedUserObject::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  identifier_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  metadata_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
    delete version_;
  }
}

void SavedUserObject::ArenaDtor(void* object) {
  SavedUserObject* _this = reinterpret_cast< SavedUserObject* >(object);
  (void)_this;
}
void SavedUserObject::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedUserObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedUserObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedUserObject_descriptor_;
}

const SavedUserObject& SavedUserObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedUserObject* SavedUserObject::default_instance_ = NULL;

SavedUserObject* SavedUserObject::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedUserObject>(arena);
}

void SavedUserObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedUserObject)
  identifier_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && version_ != NULL) delete version_;
  version_ = NULL;
  metadata_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool SavedUserObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedUserObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string identifier = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), this->identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedUserObject.identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional .tensorflow.VersionDef version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }

      // optional string metadata = 3;
      case 3: {
        if (tag == 26) {
         parse_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata().data(), this->metadata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedUserObject.metadata"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedUserObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedUserObject)
  return false;
#undef DO_
}

void SavedUserObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedUserObject)
  // optional string identifier = 1;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->identifier(), output);
  }

  // optional .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->version_, output);
  }

  // optional string metadata = 3;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), this->metadata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->metadata(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedUserObject)
}

::google::protobuf::uint8* SavedUserObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedUserObject)
  // optional string identifier = 1;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->identifier(), target);
  }

  // optional .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->version_, false, target);
  }

  // optional string metadata = 3;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), this->metadata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->metadata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedUserObject)
  return target;
}

int SavedUserObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedUserObject)
  int total_size = 0;

  // optional string identifier = 1;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // optional .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->version_);
  }

  // optional string metadata = 3;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metadata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedUserObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedUserObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedUserObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedUserObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedUserObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedUserObject)
    MergeFrom(*source);
  }
}

void SavedUserObject::MergeFrom(const SavedUserObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedUserObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.identifier().size() > 0) {
    set_identifier(from.identifier());
  }
  if (from.has_version()) {
    mutable_version()->::tensorflow::VersionDef::MergeFrom(from.version());
  }
  if (from.metadata().size() > 0) {
    set_metadata(from.metadata());
  }
}

void SavedUserObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedUserObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedUserObject::CopyFrom(const SavedUserObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedUserObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedUserObject::IsInitialized() const {

  return true;
}

void SavedUserObject::Swap(SavedUserObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedUserObject temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedUserObject::UnsafeArenaSwap(SavedUserObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedUserObject::InternalSwap(SavedUserObject* other) {
  identifier_.Swap(&other->identifier_);
  std::swap(version_, other->version_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedUserObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedUserObject_descriptor_;
  metadata.reflection = SavedUserObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedUserObject

// optional string identifier = 1;
void SavedUserObject::clear_identifier() {
  identifier_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedUserObject::identifier() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedUserObject.identifier)
  return identifier_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedUserObject::set_identifier(const ::std::string& value) {
  
  identifier_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedUserObject.identifier)
}
 void SavedUserObject::set_identifier(const char* value) {
  
  identifier_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedUserObject.identifier)
}
 void SavedUserObject::set_identifier(const char* value,
    size_t size) {
  
  identifier_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedUserObject.identifier)
}
 ::std::string* SavedUserObject::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedUserObject.identifier)
  return identifier_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedUserObject::release_identifier() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedUserObject.identifier)
  
  return identifier_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedUserObject::unsafe_arena_release_identifier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedUserObject.identifier)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return identifier_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedUserObject::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedUserObject.identifier)
}
 void SavedUserObject::unsafe_arena_set_allocated_identifier(
    ::std::string* identifier) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      identifier, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedUserObject.identifier)
}

// optional .tensorflow.VersionDef version = 2;
bool SavedUserObject::has_version() const {
  return !_is_default_instance_ && version_ != NULL;
}
void SavedUserObject::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) delete version_;
  version_ = NULL;
}
const ::tensorflow::VersionDef& SavedUserObject::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedUserObject.version)
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
::tensorflow::VersionDef* SavedUserObject::mutable_version() {
  
  if (version_ == NULL) {
    _slow_mutable_version();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedUserObject.version)
  return version_;
}
::tensorflow::VersionDef* SavedUserObject::release_version() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedUserObject.version)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_version();
  } else {
    ::tensorflow::VersionDef* temp = version_;
    version_ = NULL;
    return temp;
  }
}
 void SavedUserObject::set_allocated_version(::tensorflow::VersionDef* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_;
  }
  if (version != NULL) {
    _slow_set_allocated_version(message_arena, &version);
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedUserObject.version)
}

// optional string metadata = 3;
void SavedUserObject::clear_metadata() {
  metadata_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedUserObject::metadata() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedUserObject.metadata)
  return metadata_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedUserObject::set_metadata(const ::std::string& value) {
  
  metadata_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedUserObject.metadata)
}
 void SavedUserObject::set_metadata(const char* value) {
  
  metadata_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedUserObject.metadata)
}
 void SavedUserObject::set_metadata(const char* value,
    size_t size) {
  
  metadata_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedUserObject.metadata)
}
 ::std::string* SavedUserObject::mutable_metadata() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedUserObject.metadata)
  return metadata_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedUserObject::release_metadata() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedUserObject.metadata)
  
  return metadata_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedUserObject::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedUserObject.metadata)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return metadata_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedUserObject::set_allocated_metadata(::std::string* metadata) {
  if (metadata != NULL) {
    
  } else {
    
  }
  metadata_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedUserObject.metadata)
}
 void SavedUserObject::unsafe_arena_set_allocated_metadata(
    ::std::string* metadata) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (metadata != NULL) {
    
  } else {
    
  }
  metadata_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      metadata, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedUserObject.metadata)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedAsset::kAssetFileDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedAsset::SavedAsset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedAsset)
}

SavedAsset::SavedAsset(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedAsset)
}

void SavedAsset::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SavedAsset::SavedAsset(const SavedAsset& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedAsset)
}

void SavedAsset::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  asset_file_def_index_ = 0;
}

SavedAsset::~SavedAsset() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedAsset)
  SharedDtor();
}

void SavedAsset::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void SavedAsset::ArenaDtor(void* object) {
  SavedAsset* _this = reinterpret_cast< SavedAsset* >(object);
  (void)_this;
}
void SavedAsset::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedAsset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedAsset::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedAsset_descriptor_;
}

const SavedAsset& SavedAsset::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedAsset* SavedAsset::default_instance_ = NULL;

SavedAsset* SavedAsset::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedAsset>(arena);
}

void SavedAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedAsset)
  asset_file_def_index_ = 0;
}

bool SavedAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedAsset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 asset_file_def_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asset_file_def_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedAsset)
  return false;
#undef DO_
}

void SavedAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedAsset)
  // optional int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->asset_file_def_index(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedAsset)
}

::google::protobuf::uint8* SavedAsset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedAsset)
  // optional int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->asset_file_def_index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedAsset)
  return target;
}

int SavedAsset::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedAsset)
  int total_size = 0;

  // optional int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->asset_file_def_index());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedAsset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedAsset)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedAsset* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedAsset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedAsset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedAsset)
    MergeFrom(*source);
  }
}

void SavedAsset::MergeFrom(const SavedAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedAsset)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.asset_file_def_index() != 0) {
    set_asset_file_def_index(from.asset_file_def_index());
  }
}

void SavedAsset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedAsset::CopyFrom(const SavedAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedAsset::IsInitialized() const {

  return true;
}

void SavedAsset::Swap(SavedAsset* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedAsset temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedAsset::UnsafeArenaSwap(SavedAsset* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedAsset::InternalSwap(SavedAsset* other) {
  std::swap(asset_file_def_index_, other->asset_file_def_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedAsset::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedAsset_descriptor_;
  metadata.reflection = SavedAsset_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedAsset

// optional int32 asset_file_def_index = 1;
void SavedAsset::clear_asset_file_def_index() {
  asset_file_def_index_ = 0;
}
 ::google::protobuf::int32 SavedAsset::asset_file_def_index() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedAsset.asset_file_def_index)
  return asset_file_def_index_;
}
 void SavedAsset::set_asset_file_def_index(::google::protobuf::int32 value) {
  
  asset_file_def_index_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedAsset.asset_file_def_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SavedFunction::_slow_mutable_function_spec() {
  function_spec_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::FunctionSpec >(
      GetArenaNoVirtual());
}
::tensorflow::FunctionSpec* SavedFunction::_slow_release_function_spec() {
  if (function_spec_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::FunctionSpec* temp = new ::tensorflow::FunctionSpec;
    temp->MergeFrom(*function_spec_);
    function_spec_ = NULL;
    return temp;
  }
}
::tensorflow::FunctionSpec* SavedFunction::unsafe_arena_release_function_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedFunction.function_spec)
  
  ::tensorflow::FunctionSpec* temp = function_spec_;
  function_spec_ = NULL;
  return temp;
}
void SavedFunction::_slow_set_allocated_function_spec(
    ::google::protobuf::Arena* message_arena, ::tensorflow::FunctionSpec** function_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*function_spec) == NULL) {
      message_arena->Own(*function_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*function_spec)) {
      ::tensorflow::FunctionSpec* new_function_spec = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::FunctionSpec >(
            message_arena);
      new_function_spec->CopyFrom(**function_spec);
      *function_spec = new_function_spec;
    }
}
void SavedFunction::unsafe_arena_set_allocated_function_spec(
    ::tensorflow::FunctionSpec* function_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete function_spec_;
  }
  function_spec_ = function_spec;
  if (function_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedFunction.function_spec)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedFunction::kConcreteFunctionsFieldNumber;
const int SavedFunction::kFunctionSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedFunction::SavedFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedFunction)
}

SavedFunction::SavedFunction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  concrete_functions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedFunction)
}

void SavedFunction::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  function_spec_ = const_cast< ::tensorflow::FunctionSpec*>(&::tensorflow::FunctionSpec::default_instance());
}

SavedFunction::SavedFunction(const SavedFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedFunction)
}

void SavedFunction::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  function_spec_ = NULL;
}

SavedFunction::~SavedFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedFunction)
  SharedDtor();
}

void SavedFunction::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
    delete function_spec_;
  }
}

void SavedFunction::ArenaDtor(void* object) {
  SavedFunction* _this = reinterpret_cast< SavedFunction* >(object);
  (void)_this;
}
void SavedFunction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedFunction_descriptor_;
}

const SavedFunction& SavedFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedFunction* SavedFunction::default_instance_ = NULL;

SavedFunction* SavedFunction::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedFunction>(arena);
}

void SavedFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedFunction)
  if (GetArenaNoVirtual() == NULL && function_spec_ != NULL) delete function_spec_;
  function_spec_ = NULL;
  concrete_functions_.Clear();
}

bool SavedFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string concrete_functions = 1;
      case 1: {
        if (tag == 10) {
         parse_concrete_functions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_concrete_functions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concrete_functions(this->concrete_functions_size() - 1).data(),
            this->concrete_functions(this->concrete_functions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedFunction.concrete_functions"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_concrete_functions;
        if (input->ExpectTag(18)) goto parse_function_spec;
        break;
      }

      // optional .tensorflow.FunctionSpec function_spec = 2;
      case 2: {
        if (tag == 18) {
         parse_function_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedFunction)
  return false;
#undef DO_
}

void SavedFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedFunction)
  // repeated string concrete_functions = 1;
  for (int i = 0; i < this->concrete_functions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_functions(i).data(), this->concrete_functions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedFunction.concrete_functions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->concrete_functions(i), output);
  }

  // optional .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_spec_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedFunction)
}

::google::protobuf::uint8* SavedFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedFunction)
  // repeated string concrete_functions = 1;
  for (int i = 0; i < this->concrete_functions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_functions(i).data(), this->concrete_functions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedFunction.concrete_functions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->concrete_functions(i), target);
  }

  // optional .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->function_spec_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedFunction)
  return target;
}

int SavedFunction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedFunction)
  int total_size = 0;

  // optional .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->function_spec_);
  }

  // repeated string concrete_functions = 1;
  total_size += 1 * this->concrete_functions_size();
  for (int i = 0; i < this->concrete_functions_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->concrete_functions(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedFunction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedFunction)
    MergeFrom(*source);
  }
}

void SavedFunction::MergeFrom(const SavedFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  concrete_functions_.MergeFrom(from.concrete_functions_);
  if (from.has_function_spec()) {
    mutable_function_spec()->::tensorflow::FunctionSpec::MergeFrom(from.function_spec());
  }
}

void SavedFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFunction::CopyFrom(const SavedFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFunction::IsInitialized() const {

  return true;
}

void SavedFunction::Swap(SavedFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedFunction temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedFunction::UnsafeArenaSwap(SavedFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedFunction::InternalSwap(SavedFunction* other) {
  concrete_functions_.UnsafeArenaSwap(&other->concrete_functions_);
  std::swap(function_spec_, other->function_spec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedFunction_descriptor_;
  metadata.reflection = SavedFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedFunction

// repeated string concrete_functions = 1;
int SavedFunction::concrete_functions_size() const {
  return concrete_functions_.size();
}
void SavedFunction::clear_concrete_functions() {
  concrete_functions_.Clear();
}
 const ::std::string& SavedFunction::concrete_functions(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedFunction.concrete_functions)
  return concrete_functions_.Get(index);
}
 ::std::string* SavedFunction::mutable_concrete_functions(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedFunction.concrete_functions)
  return concrete_functions_.Mutable(index);
}
 void SavedFunction::set_concrete_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.SavedFunction.concrete_functions)
  concrete_functions_.Mutable(index)->assign(value);
}
 void SavedFunction::set_concrete_functions(int index, const char* value) {
  concrete_functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedFunction.concrete_functions)
}
 void SavedFunction::set_concrete_functions(int index, const char* value, size_t size) {
  concrete_functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedFunction.concrete_functions)
}
 ::std::string* SavedFunction::add_concrete_functions() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.SavedFunction.concrete_functions)
  return concrete_functions_.Add();
}
 void SavedFunction::add_concrete_functions(const ::std::string& value) {
  concrete_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.SavedFunction.concrete_functions)
}
 void SavedFunction::add_concrete_functions(const char* value) {
  concrete_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.SavedFunction.concrete_functions)
}
 void SavedFunction::add_concrete_functions(const char* value, size_t size) {
  concrete_functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.SavedFunction.concrete_functions)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SavedFunction::concrete_functions() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedFunction.concrete_functions)
  return concrete_functions_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SavedFunction::mutable_concrete_functions() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedFunction.concrete_functions)
  return &concrete_functions_;
}

// optional .tensorflow.FunctionSpec function_spec = 2;
bool SavedFunction::has_function_spec() const {
  return !_is_default_instance_ && function_spec_ != NULL;
}
void SavedFunction::clear_function_spec() {
  if (GetArenaNoVirtual() == NULL && function_spec_ != NULL) delete function_spec_;
  function_spec_ = NULL;
}
const ::tensorflow::FunctionSpec& SavedFunction::function_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedFunction.function_spec)
  return function_spec_ != NULL ? *function_spec_ : *default_instance_->function_spec_;
}
::tensorflow::FunctionSpec* SavedFunction::mutable_function_spec() {
  
  if (function_spec_ == NULL) {
    _slow_mutable_function_spec();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedFunction.function_spec)
  return function_spec_;
}
::tensorflow::FunctionSpec* SavedFunction::release_function_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedFunction.function_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_function_spec();
  } else {
    ::tensorflow::FunctionSpec* temp = function_spec_;
    function_spec_ = NULL;
    return temp;
  }
}
 void SavedFunction::set_allocated_function_spec(::tensorflow::FunctionSpec* function_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete function_spec_;
  }
  if (function_spec != NULL) {
    _slow_set_allocated_function_spec(message_arena, &function_spec);
  }
  function_spec_ = function_spec;
  if (function_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedFunction.function_spec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SavedConcreteFunction::_slow_mutable_canonicalized_input_signature() {
  canonicalized_input_signature_ = ::google::protobuf::Arena::Create< ::tensorflow::StructuredValue >(
      GetArenaNoVirtual());
}
::tensorflow::StructuredValue* SavedConcreteFunction::_slow_release_canonicalized_input_signature() {
  if (canonicalized_input_signature_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::StructuredValue* temp = new ::tensorflow::StructuredValue;
    temp->MergeFrom(*canonicalized_input_signature_);
    canonicalized_input_signature_ = NULL;
    return temp;
  }
}
::tensorflow::StructuredValue* SavedConcreteFunction::unsafe_arena_release_canonicalized_input_signature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
  
  ::tensorflow::StructuredValue* temp = canonicalized_input_signature_;
  canonicalized_input_signature_ = NULL;
  return temp;
}
void SavedConcreteFunction::unsafe_arena_set_allocated_canonicalized_input_signature(
    ::tensorflow::StructuredValue* canonicalized_input_signature) {
  if (GetArenaNoVirtual() == NULL) {
    delete canonicalized_input_signature_;
  }
  canonicalized_input_signature_ = canonicalized_input_signature;
  if (canonicalized_input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
}
void SavedConcreteFunction::_slow_mutable_output_signature() {
  output_signature_ = ::google::protobuf::Arena::Create< ::tensorflow::StructuredValue >(
      GetArenaNoVirtual());
}
::tensorflow::StructuredValue* SavedConcreteFunction::_slow_release_output_signature() {
  if (output_signature_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::StructuredValue* temp = new ::tensorflow::StructuredValue;
    temp->MergeFrom(*output_signature_);
    output_signature_ = NULL;
    return temp;
  }
}
::tensorflow::StructuredValue* SavedConcreteFunction::unsafe_arena_release_output_signature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedConcreteFunction.output_signature)
  
  ::tensorflow::StructuredValue* temp = output_signature_;
  output_signature_ = NULL;
  return temp;
}
void SavedConcreteFunction::unsafe_arena_set_allocated_output_signature(
    ::tensorflow::StructuredValue* output_signature) {
  if (GetArenaNoVirtual() == NULL) {
    delete output_signature_;
  }
  output_signature_ = output_signature;
  if (output_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedConcreteFunction.output_signature)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedConcreteFunction::kBoundInputsFieldNumber;
const int SavedConcreteFunction::kCanonicalizedInputSignatureFieldNumber;
const int SavedConcreteFunction::kOutputSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedConcreteFunction::SavedConcreteFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedConcreteFunction)
}

SavedConcreteFunction::SavedConcreteFunction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bound_inputs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConcreteFunction)
}

void SavedConcreteFunction::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  canonicalized_input_signature_ = const_cast< ::tensorflow::StructuredValue*>(&::tensorflow::StructuredValue::default_instance());
  output_signature_ = const_cast< ::tensorflow::StructuredValue*>(&::tensorflow::StructuredValue::default_instance());
}

SavedConcreteFunction::SavedConcreteFunction(const SavedConcreteFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConcreteFunction)
}

void SavedConcreteFunction::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  canonicalized_input_signature_ = NULL;
  output_signature_ = NULL;
}

SavedConcreteFunction::~SavedConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConcreteFunction)
  SharedDtor();
}

void SavedConcreteFunction::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
    delete canonicalized_input_signature_;
    delete output_signature_;
  }
}

void SavedConcreteFunction::ArenaDtor(void* object) {
  SavedConcreteFunction* _this = reinterpret_cast< SavedConcreteFunction* >(object);
  (void)_this;
}
void SavedConcreteFunction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedConcreteFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedConcreteFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedConcreteFunction_descriptor_;
}

const SavedConcreteFunction& SavedConcreteFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedConcreteFunction* SavedConcreteFunction::default_instance_ = NULL;

SavedConcreteFunction* SavedConcreteFunction::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedConcreteFunction>(arena);
}

void SavedConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConcreteFunction)
  if (GetArenaNoVirtual() == NULL && canonicalized_input_signature_ != NULL) delete canonicalized_input_signature_;
  canonicalized_input_signature_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_signature_ != NULL) delete output_signature_;
  output_signature_ = NULL;
  bound_inputs_.Clear();
}

bool SavedConcreteFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedConcreteFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 bound_inputs = 2;
      case 2: {
        if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bound_inputs())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_bound_inputs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_canonicalized_input_signature;
        break;
      }

      // optional .tensorflow.StructuredValue canonicalized_input_signature = 3;
      case 3: {
        if (tag == 26) {
         parse_canonicalized_input_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_canonicalized_input_signature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_output_signature;
        break;
      }

      // optional .tensorflow.StructuredValue output_signature = 4;
      case 4: {
        if (tag == 34) {
         parse_output_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_output_signature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedConcreteFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedConcreteFunction)
  return false;
#undef DO_
}

void SavedConcreteFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedConcreteFunction)
  // repeated int32 bound_inputs = 2;
  if (this->bound_inputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bound_inputs_cached_byte_size_);
  }
  for (int i = 0; i < this->bound_inputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->bound_inputs(i), output);
  }

  // optional .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->canonicalized_input_signature_, output);
  }

  // optional .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->output_signature_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedConcreteFunction)
}

::google::protobuf::uint8* SavedConcreteFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConcreteFunction)
  // repeated int32 bound_inputs = 2;
  if (this->bound_inputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bound_inputs_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bound_inputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bound_inputs(i), target);
  }

  // optional .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->canonicalized_input_signature_, false, target);
  }

  // optional .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->output_signature_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConcreteFunction)
  return target;
}

int SavedConcreteFunction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConcreteFunction)
  int total_size = 0;

  // optional .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->canonicalized_input_signature_);
  }

  // optional .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->output_signature_);
  }

  // repeated int32 bound_inputs = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->bound_inputs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->bound_inputs(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bound_inputs_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedConcreteFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedConcreteFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedConcreteFunction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedConcreteFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedConcreteFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedConcreteFunction)
    MergeFrom(*source);
  }
}

void SavedConcreteFunction::MergeFrom(const SavedConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConcreteFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  bound_inputs_.MergeFrom(from.bound_inputs_);
  if (from.has_canonicalized_input_signature()) {
    mutable_canonicalized_input_signature()->::tensorflow::StructuredValue::MergeFrom(from.canonicalized_input_signature());
  }
  if (from.has_output_signature()) {
    mutable_output_signature()->::tensorflow::StructuredValue::MergeFrom(from.output_signature());
  }
}

void SavedConcreteFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedConcreteFunction::CopyFrom(const SavedConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConcreteFunction::IsInitialized() const {

  return true;
}

void SavedConcreteFunction::Swap(SavedConcreteFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedConcreteFunction temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedConcreteFunction::UnsafeArenaSwap(SavedConcreteFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedConcreteFunction::InternalSwap(SavedConcreteFunction* other) {
  bound_inputs_.UnsafeArenaSwap(&other->bound_inputs_);
  std::swap(canonicalized_input_signature_, other->canonicalized_input_signature_);
  std::swap(output_signature_, other->output_signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedConcreteFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedConcreteFunction_descriptor_;
  metadata.reflection = SavedConcreteFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedConcreteFunction

// repeated int32 bound_inputs = 2;
int SavedConcreteFunction::bound_inputs_size() const {
  return bound_inputs_.size();
}
void SavedConcreteFunction::clear_bound_inputs() {
  bound_inputs_.Clear();
}
 ::google::protobuf::int32 SavedConcreteFunction::bound_inputs(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedConcreteFunction.bound_inputs)
  return bound_inputs_.Get(index);
}
 void SavedConcreteFunction::set_bound_inputs(int index, ::google::protobuf::int32 value) {
  bound_inputs_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SavedConcreteFunction.bound_inputs)
}
 void SavedConcreteFunction::add_bound_inputs(::google::protobuf::int32 value) {
  bound_inputs_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SavedConcreteFunction.bound_inputs)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedConcreteFunction::bound_inputs() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedConcreteFunction.bound_inputs)
  return bound_inputs_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedConcreteFunction::mutable_bound_inputs() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedConcreteFunction.bound_inputs)
  return &bound_inputs_;
}

// optional .tensorflow.StructuredValue canonicalized_input_signature = 3;
bool SavedConcreteFunction::has_canonicalized_input_signature() const {
  return !_is_default_instance_ && canonicalized_input_signature_ != NULL;
}
void SavedConcreteFunction::clear_canonicalized_input_signature() {
  if (GetArenaNoVirtual() == NULL && canonicalized_input_signature_ != NULL) delete canonicalized_input_signature_;
  canonicalized_input_signature_ = NULL;
}
const ::tensorflow::StructuredValue& SavedConcreteFunction::canonicalized_input_signature() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
  return canonicalized_input_signature_ != NULL ? *canonicalized_input_signature_ : *default_instance_->canonicalized_input_signature_;
}
::tensorflow::StructuredValue* SavedConcreteFunction::mutable_canonicalized_input_signature() {
  
  if (canonicalized_input_signature_ == NULL) {
    _slow_mutable_canonicalized_input_signature();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
  return canonicalized_input_signature_;
}
::tensorflow::StructuredValue* SavedConcreteFunction::release_canonicalized_input_signature() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_canonicalized_input_signature();
  } else {
    ::tensorflow::StructuredValue* temp = canonicalized_input_signature_;
    canonicalized_input_signature_ = NULL;
    return temp;
  }
}
 void SavedConcreteFunction::set_allocated_canonicalized_input_signature(::tensorflow::StructuredValue* canonicalized_input_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete canonicalized_input_signature_;
  }
  if (canonicalized_input_signature != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(canonicalized_input_signature);
    }
  }
  canonicalized_input_signature_ = canonicalized_input_signature;
  if (canonicalized_input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
}

// optional .tensorflow.StructuredValue output_signature = 4;
bool SavedConcreteFunction::has_output_signature() const {
  return !_is_default_instance_ && output_signature_ != NULL;
}
void SavedConcreteFunction::clear_output_signature() {
  if (GetArenaNoVirtual() == NULL && output_signature_ != NULL) delete output_signature_;
  output_signature_ = NULL;
}
const ::tensorflow::StructuredValue& SavedConcreteFunction::output_signature() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedConcreteFunction.output_signature)
  return output_signature_ != NULL ? *output_signature_ : *default_instance_->output_signature_;
}
::tensorflow::StructuredValue* SavedConcreteFunction::mutable_output_signature() {
  
  if (output_signature_ == NULL) {
    _slow_mutable_output_signature();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedConcreteFunction.output_signature)
  return output_signature_;
}
::tensorflow::StructuredValue* SavedConcreteFunction::release_output_signature() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedConcreteFunction.output_signature)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_output_signature();
  } else {
    ::tensorflow::StructuredValue* temp = output_signature_;
    output_signature_ = NULL;
    return temp;
  }
}
 void SavedConcreteFunction::set_allocated_output_signature(::tensorflow::StructuredValue* output_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_signature_;
  }
  if (output_signature != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(output_signature);
    }
  }
  output_signature_ = output_signature;
  if (output_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedConcreteFunction.output_signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedBareConcreteFunction::kConcreteFunctionNameFieldNumber;
const int SavedBareConcreteFunction::kArgumentKeywordsFieldNumber;
const int SavedBareConcreteFunction::kAllowedPositionalArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedBareConcreteFunction::SavedBareConcreteFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedBareConcreteFunction)
}

SavedBareConcreteFunction::SavedBareConcreteFunction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  argument_keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedBareConcreteFunction)
}

void SavedBareConcreteFunction::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SavedBareConcreteFunction::SavedBareConcreteFunction(const SavedBareConcreteFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedBareConcreteFunction)
}

void SavedBareConcreteFunction::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  concrete_function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowed_positional_arguments_ = GOOGLE_LONGLONG(0);
}

SavedBareConcreteFunction::~SavedBareConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedBareConcreteFunction)
  SharedDtor();
}

void SavedBareConcreteFunction::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  concrete_function_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
  }
}

void SavedBareConcreteFunction::ArenaDtor(void* object) {
  SavedBareConcreteFunction* _this = reinterpret_cast< SavedBareConcreteFunction* >(object);
  (void)_this;
}
void SavedBareConcreteFunction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedBareConcreteFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedBareConcreteFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedBareConcreteFunction_descriptor_;
}

const SavedBareConcreteFunction& SavedBareConcreteFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedBareConcreteFunction* SavedBareConcreteFunction::default_instance_ = NULL;

SavedBareConcreteFunction* SavedBareConcreteFunction::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedBareConcreteFunction>(arena);
}

void SavedBareConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedBareConcreteFunction)
  concrete_function_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  allowed_positional_arguments_ = GOOGLE_LONGLONG(0);
  argument_keywords_.Clear();
}

bool SavedBareConcreteFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedBareConcreteFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string concrete_function_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concrete_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concrete_function_name().data(), this->concrete_function_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedBareConcreteFunction.concrete_function_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_argument_keywords;
        break;
      }

      // repeated string argument_keywords = 2;
      case 2: {
        if (tag == 18) {
         parse_argument_keywords:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_argument_keywords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->argument_keywords(this->argument_keywords_size() - 1).data(),
            this->argument_keywords(this->argument_keywords_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedBareConcreteFunction.argument_keywords"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_argument_keywords;
        if (input->ExpectTag(24)) goto parse_allowed_positional_arguments;
        break;
      }

      // optional int64 allowed_positional_arguments = 3;
      case 3: {
        if (tag == 24) {
         parse_allowed_positional_arguments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &allowed_positional_arguments_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedBareConcreteFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedBareConcreteFunction)
  return false;
#undef DO_
}

void SavedBareConcreteFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedBareConcreteFunction)
  // optional string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_function_name().data(), this->concrete_function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.concrete_function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concrete_function_name(), output);
  }

  // repeated string argument_keywords = 2;
  for (int i = 0; i < this->argument_keywords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_keywords(i).data(), this->argument_keywords(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.argument_keywords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->argument_keywords(i), output);
  }

  // optional int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->allowed_positional_arguments(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedBareConcreteFunction)
}

::google::protobuf::uint8* SavedBareConcreteFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedBareConcreteFunction)
  // optional string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_function_name().data(), this->concrete_function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.concrete_function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concrete_function_name(), target);
  }

  // repeated string argument_keywords = 2;
  for (int i = 0; i < this->argument_keywords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_keywords(i).data(), this->argument_keywords(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.argument_keywords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->argument_keywords(i), target);
  }

  // optional int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->allowed_positional_arguments(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedBareConcreteFunction)
  return target;
}

int SavedBareConcreteFunction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedBareConcreteFunction)
  int total_size = 0;

  // optional string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concrete_function_name());
  }

  // optional int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->allowed_positional_arguments());
  }

  // repeated string argument_keywords = 2;
  total_size += 1 * this->argument_keywords_size();
  for (int i = 0; i < this->argument_keywords_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->argument_keywords(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedBareConcreteFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedBareConcreteFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedBareConcreteFunction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedBareConcreteFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedBareConcreteFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedBareConcreteFunction)
    MergeFrom(*source);
  }
}

void SavedBareConcreteFunction::MergeFrom(const SavedBareConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedBareConcreteFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  argument_keywords_.MergeFrom(from.argument_keywords_);
  if (from.concrete_function_name().size() > 0) {
    set_concrete_function_name(from.concrete_function_name());
  }
  if (from.allowed_positional_arguments() != 0) {
    set_allowed_positional_arguments(from.allowed_positional_arguments());
  }
}

void SavedBareConcreteFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedBareConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedBareConcreteFunction::CopyFrom(const SavedBareConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedBareConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedBareConcreteFunction::IsInitialized() const {

  return true;
}

void SavedBareConcreteFunction::Swap(SavedBareConcreteFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedBareConcreteFunction temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedBareConcreteFunction::UnsafeArenaSwap(SavedBareConcreteFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedBareConcreteFunction::InternalSwap(SavedBareConcreteFunction* other) {
  concrete_function_name_.Swap(&other->concrete_function_name_);
  argument_keywords_.UnsafeArenaSwap(&other->argument_keywords_);
  std::swap(allowed_positional_arguments_, other->allowed_positional_arguments_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedBareConcreteFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedBareConcreteFunction_descriptor_;
  metadata.reflection = SavedBareConcreteFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedBareConcreteFunction

// optional string concrete_function_name = 1;
void SavedBareConcreteFunction::clear_concrete_function_name() {
  concrete_function_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedBareConcreteFunction::concrete_function_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedBareConcreteFunction.concrete_function_name)
  return concrete_function_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedBareConcreteFunction::set_concrete_function_name(const ::std::string& value) {
  
  concrete_function_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedBareConcreteFunction.concrete_function_name)
}
 void SavedBareConcreteFunction::set_concrete_function_name(const char* value) {
  
  concrete_function_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedBareConcreteFunction.concrete_function_name)
}
 void SavedBareConcreteFunction::set_concrete_function_name(const char* value,
    size_t size) {
  
  concrete_function_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedBareConcreteFunction.concrete_function_name)
}
 ::std::string* SavedBareConcreteFunction::mutable_concrete_function_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedBareConcreteFunction.concrete_function_name)
  return concrete_function_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedBareConcreteFunction::release_concrete_function_name() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedBareConcreteFunction.concrete_function_name)
  
  return concrete_function_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedBareConcreteFunction::unsafe_arena_release_concrete_function_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedBareConcreteFunction.concrete_function_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return concrete_function_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedBareConcreteFunction::set_allocated_concrete_function_name(::std::string* concrete_function_name) {
  if (concrete_function_name != NULL) {
    
  } else {
    
  }
  concrete_function_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concrete_function_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedBareConcreteFunction.concrete_function_name)
}
 void SavedBareConcreteFunction::unsafe_arena_set_allocated_concrete_function_name(
    ::std::string* concrete_function_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (concrete_function_name != NULL) {
    
  } else {
    
  }
  concrete_function_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      concrete_function_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedBareConcreteFunction.concrete_function_name)
}

// repeated string argument_keywords = 2;
int SavedBareConcreteFunction::argument_keywords_size() const {
  return argument_keywords_.size();
}
void SavedBareConcreteFunction::clear_argument_keywords() {
  argument_keywords_.Clear();
}
 const ::std::string& SavedBareConcreteFunction::argument_keywords(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedBareConcreteFunction.argument_keywords)
  return argument_keywords_.Get(index);
}
 ::std::string* SavedBareConcreteFunction::mutable_argument_keywords(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedBareConcreteFunction.argument_keywords)
  return argument_keywords_.Mutable(index);
}
 void SavedBareConcreteFunction::set_argument_keywords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.SavedBareConcreteFunction.argument_keywords)
  argument_keywords_.Mutable(index)->assign(value);
}
 void SavedBareConcreteFunction::set_argument_keywords(int index, const char* value) {
  argument_keywords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedBareConcreteFunction.argument_keywords)
}
 void SavedBareConcreteFunction::set_argument_keywords(int index, const char* value, size_t size) {
  argument_keywords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedBareConcreteFunction.argument_keywords)
}
 ::std::string* SavedBareConcreteFunction::add_argument_keywords() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.SavedBareConcreteFunction.argument_keywords)
  return argument_keywords_.Add();
}
 void SavedBareConcreteFunction::add_argument_keywords(const ::std::string& value) {
  argument_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.SavedBareConcreteFunction.argument_keywords)
}
 void SavedBareConcreteFunction::add_argument_keywords(const char* value) {
  argument_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.SavedBareConcreteFunction.argument_keywords)
}
 void SavedBareConcreteFunction::add_argument_keywords(const char* value, size_t size) {
  argument_keywords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.SavedBareConcreteFunction.argument_keywords)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SavedBareConcreteFunction::argument_keywords() const {
  // @@protoc_insertion_point(field_list:tensorflow.SavedBareConcreteFunction.argument_keywords)
  return argument_keywords_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SavedBareConcreteFunction::mutable_argument_keywords() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SavedBareConcreteFunction.argument_keywords)
  return &argument_keywords_;
}

// optional int64 allowed_positional_arguments = 3;
void SavedBareConcreteFunction::clear_allowed_positional_arguments() {
  allowed_positional_arguments_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SavedBareConcreteFunction::allowed_positional_arguments() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedBareConcreteFunction.allowed_positional_arguments)
  return allowed_positional_arguments_;
}
 void SavedBareConcreteFunction::set_allowed_positional_arguments(::google::protobuf::int64 value) {
  
  allowed_positional_arguments_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedBareConcreteFunction.allowed_positional_arguments)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedConstant::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedConstant::SavedConstant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedConstant)
}

SavedConstant::SavedConstant(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConstant)
}

void SavedConstant::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SavedConstant::SavedConstant(const SavedConstant& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConstant)
}

void SavedConstant::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SavedConstant::~SavedConstant() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConstant)
  SharedDtor();
}

void SavedConstant::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  operation_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
  }
}

void SavedConstant::ArenaDtor(void* object) {
  SavedConstant* _this = reinterpret_cast< SavedConstant* >(object);
  (void)_this;
}
void SavedConstant::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedConstant_descriptor_;
}

const SavedConstant& SavedConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedConstant* SavedConstant::default_instance_ = NULL;

SavedConstant* SavedConstant::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedConstant>(arena);
}

void SavedConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConstant)
  operation_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool SavedConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedConstant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string operation = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation().data(), this->operation().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedConstant.operation"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedConstant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedConstant)
  return false;
#undef DO_
}

void SavedConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedConstant)
  // optional string operation = 1;
  if (this->operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), this->operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedConstant.operation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedConstant)
}

::google::protobuf::uint8* SavedConstant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConstant)
  // optional string operation = 1;
  if (this->operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), this->operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedConstant.operation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConstant)
  return target;
}

int SavedConstant::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConstant)
  int total_size = 0;

  // optional string operation = 1;
  if (this->operation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedConstant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedConstant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedConstant* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedConstant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedConstant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedConstant)
    MergeFrom(*source);
  }
}

void SavedConstant::MergeFrom(const SavedConstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConstant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.operation().size() > 0) {
    set_operation(from.operation());
  }
}

void SavedConstant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedConstant::CopyFrom(const SavedConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConstant::IsInitialized() const {

  return true;
}

void SavedConstant::Swap(SavedConstant* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedConstant temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedConstant::UnsafeArenaSwap(SavedConstant* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedConstant::InternalSwap(SavedConstant* other) {
  operation_.Swap(&other->operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedConstant_descriptor_;
  metadata.reflection = SavedConstant_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedConstant

// optional string operation = 1;
void SavedConstant::clear_operation() {
  operation_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedConstant::operation() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedConstant.operation)
  return operation_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedConstant::set_operation(const ::std::string& value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedConstant.operation)
}
 void SavedConstant::set_operation(const char* value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedConstant.operation)
}
 void SavedConstant::set_operation(const char* value,
    size_t size) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedConstant.operation)
}
 ::std::string* SavedConstant::mutable_operation() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedConstant.operation)
  return operation_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedConstant::release_operation() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedConstant.operation)
  
  return operation_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedConstant::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedConstant.operation)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedConstant::set_allocated_operation(::std::string* operation) {
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedConstant.operation)
}
 void SavedConstant::unsafe_arena_set_allocated_operation(
    ::std::string* operation) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedConstant.operation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SavedVariable::_slow_mutable_shape() {
  shape_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
      GetArenaNoVirtual());
}
::tensorflow::TensorShapeProto* SavedVariable::_slow_release_shape() {
  if (shape_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::TensorShapeProto* temp = new ::tensorflow::TensorShapeProto;
    temp->MergeFrom(*shape_);
    shape_ = NULL;
    return temp;
  }
}
::tensorflow::TensorShapeProto* SavedVariable::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedVariable.shape)
  
  ::tensorflow::TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void SavedVariable::_slow_set_allocated_shape(
    ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** shape) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*shape) == NULL) {
      message_arena->Own(*shape);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*shape)) {
      ::tensorflow::TensorShapeProto* new_shape = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
            message_arena);
      new_shape->CopyFrom(**shape);
      *shape = new_shape;
    }
}
void SavedVariable::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedVariable.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedVariable::kDtypeFieldNumber;
const int SavedVariable::kShapeFieldNumber;
const int SavedVariable::kTrainableFieldNumber;
const int SavedVariable::kSynchronizationFieldNumber;
const int SavedVariable::kAggregationFieldNumber;
const int SavedVariable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedVariable::SavedVariable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedVariable)
}

SavedVariable::SavedVariable(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedVariable)
}

void SavedVariable::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  shape_ = const_cast< ::tensorflow::TensorShapeProto*>(&::tensorflow::TensorShapeProto::default_instance());
}

SavedVariable::SavedVariable(const SavedVariable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedVariable)
}

void SavedVariable::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dtype_ = 0;
  shape_ = NULL;
  trainable_ = false;
  synchronization_ = 0;
  aggregation_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SavedVariable::~SavedVariable() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedVariable)
  SharedDtor();
}

void SavedVariable::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
    delete shape_;
  }
}

void SavedVariable::ArenaDtor(void* object) {
  SavedVariable* _this = reinterpret_cast< SavedVariable* >(object);
  (void)_this;
}
void SavedVariable::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedVariable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedVariable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedVariable_descriptor_;
}

const SavedVariable& SavedVariable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedVariable* SavedVariable::default_instance_ = NULL;

SavedVariable* SavedVariable::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedVariable>(arena);
}

void SavedVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedVariable)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SavedVariable, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SavedVariable*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dtype_, aggregation_);
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

}

bool SavedVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedVariable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.DataType dtype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // optional .tensorflow.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_trainable;
        break;
      }

      // optional bool trainable = 3;
      case 3: {
        if (tag == 24) {
         parse_trainable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trainable_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_synchronization;
        break;
      }

      // optional .tensorflow.VariableSynchronization synchronization = 4;
      case 4: {
        if (tag == 32) {
         parse_synchronization:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_synchronization(static_cast< ::tensorflow::VariableSynchronization >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_aggregation;
        break;
      }

      // optional .tensorflow.VariableAggregation aggregation = 5;
      case 5: {
        if (tag == 40) {
         parse_aggregation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_aggregation(static_cast< ::tensorflow::VariableAggregation >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedVariable.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedVariable)
  return false;
#undef DO_
}

void SavedVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedVariable)
  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dtype(), output);
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  // optional bool trainable = 3;
  if (this->trainable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->trainable(), output);
  }

  // optional .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->synchronization(), output);
  }

  // optional .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->aggregation(), output);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedVariable)
}

::google::protobuf::uint8* SavedVariable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedVariable)
  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dtype(), target);
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, false, target);
  }

  // optional bool trainable = 3;
  if (this->trainable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->trainable(), target);
  }

  // optional .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->synchronization(), target);
  }

  // optional .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->aggregation(), target);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedVariable)
  return target;
}

int SavedVariable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedVariable)
  int total_size = 0;

  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shape_);
  }

  // optional bool trainable = 3;
  if (this->trainable() != 0) {
    total_size += 1 + 1;
  }

  // optional .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->synchronization());
  }

  // optional .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->aggregation());
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedVariable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedVariable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedVariable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedVariable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedVariable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedVariable)
    MergeFrom(*source);
  }
}

void SavedVariable::MergeFrom(const SavedVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedVariable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
  if (from.trainable() != 0) {
    set_trainable(from.trainable());
  }
  if (from.synchronization() != 0) {
    set_synchronization(from.synchronization());
  }
  if (from.aggregation() != 0) {
    set_aggregation(from.aggregation());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void SavedVariable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedVariable::CopyFrom(const SavedVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedVariable::IsInitialized() const {

  return true;
}

void SavedVariable::Swap(SavedVariable* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedVariable temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedVariable::UnsafeArenaSwap(SavedVariable* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedVariable::InternalSwap(SavedVariable* other) {
  std::swap(dtype_, other->dtype_);
  std::swap(shape_, other->shape_);
  std::swap(trainable_, other->trainable_);
  std::swap(synchronization_, other->synchronization_);
  std::swap(aggregation_, other->aggregation_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedVariable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedVariable_descriptor_;
  metadata.reflection = SavedVariable_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedVariable

// optional .tensorflow.DataType dtype = 1;
void SavedVariable::clear_dtype() {
  dtype_ = 0;
}
 ::tensorflow::DataType SavedVariable::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.dtype)
  return static_cast< ::tensorflow::DataType >(dtype_);
}
 void SavedVariable::set_dtype(::tensorflow::DataType value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedVariable.dtype)
}

// optional .tensorflow.TensorShapeProto shape = 2;
bool SavedVariable::has_shape() const {
  return !_is_default_instance_ && shape_ != NULL;
}
void SavedVariable::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
const ::tensorflow::TensorShapeProto& SavedVariable::shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.shape)
  return shape_ != NULL ? *shape_ : *default_instance_->shape_;
}
::tensorflow::TensorShapeProto* SavedVariable::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedVariable.shape)
  return shape_;
}
::tensorflow::TensorShapeProto* SavedVariable::release_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedVariable.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
 void SavedVariable::set_allocated_shape(::tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedVariable.shape)
}

// optional bool trainable = 3;
void SavedVariable::clear_trainable() {
  trainable_ = false;
}
 bool SavedVariable::trainable() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.trainable)
  return trainable_;
}
 void SavedVariable::set_trainable(bool value) {
  
  trainable_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedVariable.trainable)
}

// optional .tensorflow.VariableSynchronization synchronization = 4;
void SavedVariable::clear_synchronization() {
  synchronization_ = 0;
}
 ::tensorflow::VariableSynchronization SavedVariable::synchronization() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.synchronization)
  return static_cast< ::tensorflow::VariableSynchronization >(synchronization_);
}
 void SavedVariable::set_synchronization(::tensorflow::VariableSynchronization value) {
  
  synchronization_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedVariable.synchronization)
}

// optional .tensorflow.VariableAggregation aggregation = 5;
void SavedVariable::clear_aggregation() {
  aggregation_ = 0;
}
 ::tensorflow::VariableAggregation SavedVariable::aggregation() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.aggregation)
  return static_cast< ::tensorflow::VariableAggregation >(aggregation_);
}
 void SavedVariable::set_aggregation(::tensorflow::VariableAggregation value) {
  
  aggregation_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SavedVariable.aggregation)
}

// optional string name = 6;
void SavedVariable::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedVariable::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedVariable.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedVariable::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedVariable.name)
}
 void SavedVariable::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedVariable.name)
}
 void SavedVariable::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedVariable.name)
}
 ::std::string* SavedVariable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedVariable.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedVariable::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedVariable.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedVariable::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedVariable.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedVariable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedVariable.name)
}
 void SavedVariable::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedVariable.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void FunctionSpec::_slow_mutable_fullargspec() {
  fullargspec_ = ::google::protobuf::Arena::Create< ::tensorflow::StructuredValue >(
      GetArenaNoVirtual());
}
::tensorflow::StructuredValue* FunctionSpec::_slow_release_fullargspec() {
  if (fullargspec_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::StructuredValue* temp = new ::tensorflow::StructuredValue;
    temp->MergeFrom(*fullargspec_);
    fullargspec_ = NULL;
    return temp;
  }
}
::tensorflow::StructuredValue* FunctionSpec::unsafe_arena_release_fullargspec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.FunctionSpec.fullargspec)
  
  ::tensorflow::StructuredValue* temp = fullargspec_;
  fullargspec_ = NULL;
  return temp;
}
void FunctionSpec::unsafe_arena_set_allocated_fullargspec(
    ::tensorflow::StructuredValue* fullargspec) {
  if (GetArenaNoVirtual() == NULL) {
    delete fullargspec_;
  }
  fullargspec_ = fullargspec;
  if (fullargspec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FunctionSpec.fullargspec)
}
void FunctionSpec::_slow_mutable_input_signature() {
  input_signature_ = ::google::protobuf::Arena::Create< ::tensorflow::StructuredValue >(
      GetArenaNoVirtual());
}
::tensorflow::StructuredValue* FunctionSpec::_slow_release_input_signature() {
  if (input_signature_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::StructuredValue* temp = new ::tensorflow::StructuredValue;
    temp->MergeFrom(*input_signature_);
    input_signature_ = NULL;
    return temp;
  }
}
::tensorflow::StructuredValue* FunctionSpec::unsafe_arena_release_input_signature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.FunctionSpec.input_signature)
  
  ::tensorflow::StructuredValue* temp = input_signature_;
  input_signature_ = NULL;
  return temp;
}
void FunctionSpec::unsafe_arena_set_allocated_input_signature(
    ::tensorflow::StructuredValue* input_signature) {
  if (GetArenaNoVirtual() == NULL) {
    delete input_signature_;
  }
  input_signature_ = input_signature;
  if (input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FunctionSpec.input_signature)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionSpec::kFullargspecFieldNumber;
const int FunctionSpec::kIsMethodFieldNumber;
const int FunctionSpec::kInputSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionSpec::FunctionSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.FunctionSpec)
}

FunctionSpec::FunctionSpec(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionSpec)
}

void FunctionSpec::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fullargspec_ = const_cast< ::tensorflow::StructuredValue*>(&::tensorflow::StructuredValue::default_instance());
  input_signature_ = const_cast< ::tensorflow::StructuredValue*>(&::tensorflow::StructuredValue::default_instance());
}

FunctionSpec::FunctionSpec(const FunctionSpec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionSpec)
}

void FunctionSpec::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fullargspec_ = NULL;
  is_method_ = false;
  input_signature_ = NULL;
}

FunctionSpec::~FunctionSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionSpec)
  SharedDtor();
}

void FunctionSpec::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
    delete fullargspec_;
    delete input_signature_;
  }
}

void FunctionSpec::ArenaDtor(void* object) {
  FunctionSpec* _this = reinterpret_cast< FunctionSpec* >(object);
  (void)_this;
}
void FunctionSpec::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FunctionSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionSpec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionSpec_descriptor_;
}

const FunctionSpec& FunctionSpec::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

FunctionSpec* FunctionSpec::default_instance_ = NULL;

FunctionSpec* FunctionSpec::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FunctionSpec>(arena);
}

void FunctionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionSpec)
  if (GetArenaNoVirtual() == NULL && fullargspec_ != NULL) delete fullargspec_;
  fullargspec_ = NULL;
  is_method_ = false;
  if (GetArenaNoVirtual() == NULL && input_signature_ != NULL) delete input_signature_;
  input_signature_ = NULL;
}

bool FunctionSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.FunctionSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.StructuredValue fullargspec = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullargspec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_method;
        break;
      }

      // optional bool is_method = 2;
      case 2: {
        if (tag == 16) {
         parse_is_method:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_method_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_input_signature;
        break;
      }

      // optional .tensorflow.StructuredValue input_signature = 5;
      case 5: {
        if (tag == 42) {
         parse_input_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input_signature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.FunctionSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.FunctionSpec)
  return false;
#undef DO_
}

void FunctionSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.FunctionSpec)
  // optional .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fullargspec_, output);
  }

  // optional bool is_method = 2;
  if (this->is_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_method(), output);
  }

  // optional .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->input_signature_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.FunctionSpec)
}

::google::protobuf::uint8* FunctionSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionSpec)
  // optional .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fullargspec_, false, target);
  }

  // optional bool is_method = 2;
  if (this->is_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_method(), target);
  }

  // optional .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->input_signature_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionSpec)
  return target;
}

int FunctionSpec::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionSpec)
  int total_size = 0;

  // optional .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fullargspec_);
  }

  // optional bool is_method = 2;
  if (this->is_method() != 0) {
    total_size += 1 + 1;
  }

  // optional .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->input_signature_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.FunctionSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FunctionSpec* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.FunctionSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.FunctionSpec)
    MergeFrom(*source);
  }
}

void FunctionSpec::MergeFrom(const FunctionSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_fullargspec()) {
    mutable_fullargspec()->::tensorflow::StructuredValue::MergeFrom(from.fullargspec());
  }
  if (from.is_method() != 0) {
    set_is_method(from.is_method());
  }
  if (from.has_input_signature()) {
    mutable_input_signature()->::tensorflow::StructuredValue::MergeFrom(from.input_signature());
  }
}

void FunctionSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.FunctionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionSpec::CopyFrom(const FunctionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSpec::IsInitialized() const {

  return true;
}

void FunctionSpec::Swap(FunctionSpec* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionSpec temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FunctionSpec::UnsafeArenaSwap(FunctionSpec* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionSpec::InternalSwap(FunctionSpec* other) {
  std::swap(fullargspec_, other->fullargspec_);
  std::swap(is_method_, other->is_method_);
  std::swap(input_signature_, other->input_signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionSpec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionSpec_descriptor_;
  metadata.reflection = FunctionSpec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionSpec

// optional .tensorflow.StructuredValue fullargspec = 1;
bool FunctionSpec::has_fullargspec() const {
  return !_is_default_instance_ && fullargspec_ != NULL;
}
void FunctionSpec::clear_fullargspec() {
  if (GetArenaNoVirtual() == NULL && fullargspec_ != NULL) delete fullargspec_;
  fullargspec_ = NULL;
}
const ::tensorflow::StructuredValue& FunctionSpec::fullargspec() const {
  // @@protoc_insertion_point(field_get:tensorflow.FunctionSpec.fullargspec)
  return fullargspec_ != NULL ? *fullargspec_ : *default_instance_->fullargspec_;
}
::tensorflow::StructuredValue* FunctionSpec::mutable_fullargspec() {
  
  if (fullargspec_ == NULL) {
    _slow_mutable_fullargspec();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.FunctionSpec.fullargspec)
  return fullargspec_;
}
::tensorflow::StructuredValue* FunctionSpec::release_fullargspec() {
  // @@protoc_insertion_point(field_release:tensorflow.FunctionSpec.fullargspec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_fullargspec();
  } else {
    ::tensorflow::StructuredValue* temp = fullargspec_;
    fullargspec_ = NULL;
    return temp;
  }
}
 void FunctionSpec::set_allocated_fullargspec(::tensorflow::StructuredValue* fullargspec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fullargspec_;
  }
  if (fullargspec != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(fullargspec);
    }
  }
  fullargspec_ = fullargspec;
  if (fullargspec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FunctionSpec.fullargspec)
}

// optional bool is_method = 2;
void FunctionSpec::clear_is_method() {
  is_method_ = false;
}
 bool FunctionSpec::is_method() const {
  // @@protoc_insertion_point(field_get:tensorflow.FunctionSpec.is_method)
  return is_method_;
}
 void FunctionSpec::set_is_method(bool value) {
  
  is_method_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.FunctionSpec.is_method)
}

// optional .tensorflow.StructuredValue input_signature = 5;
bool FunctionSpec::has_input_signature() const {
  return !_is_default_instance_ && input_signature_ != NULL;
}
void FunctionSpec::clear_input_signature() {
  if (GetArenaNoVirtual() == NULL && input_signature_ != NULL) delete input_signature_;
  input_signature_ = NULL;
}
const ::tensorflow::StructuredValue& FunctionSpec::input_signature() const {
  // @@protoc_insertion_point(field_get:tensorflow.FunctionSpec.input_signature)
  return input_signature_ != NULL ? *input_signature_ : *default_instance_->input_signature_;
}
::tensorflow::StructuredValue* FunctionSpec::mutable_input_signature() {
  
  if (input_signature_ == NULL) {
    _slow_mutable_input_signature();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.FunctionSpec.input_signature)
  return input_signature_;
}
::tensorflow::StructuredValue* FunctionSpec::release_input_signature() {
  // @@protoc_insertion_point(field_release:tensorflow.FunctionSpec.input_signature)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_input_signature();
  } else {
    ::tensorflow::StructuredValue* temp = input_signature_;
    input_signature_ = NULL;
    return temp;
  }
}
 void FunctionSpec::set_allocated_input_signature(::tensorflow::StructuredValue* input_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_signature_;
  }
  if (input_signature != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(input_signature);
    }
  }
  input_signature_ = input_signature;
  if (input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FunctionSpec.input_signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedResource::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedResource::SavedResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedResource)
}

SavedResource::SavedResource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedResource)
}

void SavedResource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SavedResource::SavedResource(const SavedResource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedResource)
}

void SavedResource::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SavedResource::~SavedResource() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedResource)
  SharedDtor();
}

void SavedResource::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  device_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (this != default_instance_) {
  }
}

void SavedResource::ArenaDtor(void* object) {
  SavedResource* _this = reinterpret_cast< SavedResource* >(object);
  (void)_this;
}
void SavedResource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SavedResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedResource_descriptor_;
}

const SavedResource& SavedResource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SavedResource* SavedResource::default_instance_ = NULL;

SavedResource* SavedResource::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SavedResource>(arena);
}

void SavedResource::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedResource)
  device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool SavedResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedResource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SavedResource.device"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedResource)
  return false;
#undef DO_
}

void SavedResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedResource)
  // optional string device = 1;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedResource.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SavedResource)
}

::google::protobuf::uint8* SavedResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedResource)
  // optional string device = 1;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedResource.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedResource)
  return target;
}

int SavedResource::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedResource)
  int total_size = 0;

  // optional string device = 1;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavedResource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavedResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedResource)
    MergeFrom(*source);
  }
}

void SavedResource::MergeFrom(const SavedResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.device().size() > 0) {
    set_device(from.device());
  }
}

void SavedResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedResource::CopyFrom(const SavedResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedResource::IsInitialized() const {

  return true;
}

void SavedResource::Swap(SavedResource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedResource temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SavedResource::UnsafeArenaSwap(SavedResource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedResource::InternalSwap(SavedResource* other) {
  device_.Swap(&other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavedResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedResource_descriptor_;
  metadata.reflection = SavedResource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavedResource

// optional string device = 1;
void SavedResource::clear_device() {
  device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 const ::std::string& SavedResource::device() const {
  // @@protoc_insertion_point(field_get:tensorflow.SavedResource.device)
  return device_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SavedResource::set_device(const ::std::string& value) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SavedResource.device)
}
 void SavedResource::set_device(const char* value) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SavedResource.device)
}
 void SavedResource::set_device(const char* value,
    size_t size) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SavedResource.device)
}
 ::std::string* SavedResource::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SavedResource.device)
  return device_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedResource::release_device() {
  // @@protoc_insertion_point(field_release:tensorflow.SavedResource.device)
  
  return device_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
 ::std::string* SavedResource::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SavedResource.device)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return device_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
 void SavedResource::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedResource.device)
}
 void SavedResource::unsafe_arena_set_allocated_device(
    ::std::string* device) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (device != NULL) {
    
  } else {
    
  }
  device_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      device, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedResource.device)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveableObject::kSaveFunctionFieldNumber;
const int SaveableObject::kRestoreFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveableObject::SaveableObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SaveableObject)
}

SaveableObject::SaveableObject(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SaveableObject)
}

void SaveableObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SaveableObject::SaveableObject(const SaveableObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SaveableObject)
}

void SaveableObject::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  save_function_ = 0;
  restore_function_ = 0;
}

SaveableObject::~SaveableObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SaveableObject)
  SharedDtor();
}

void SaveableObject::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void SaveableObject::ArenaDtor(void* object) {
  SaveableObject* _this = reinterpret_cast< SaveableObject* >(object);
  (void)_this;
}
void SaveableObject::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SaveableObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveableObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveableObject_descriptor_;
}

const SaveableObject& SaveableObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto();
  return *default_instance_;
}

SaveableObject* SaveableObject::default_instance_ = NULL;

SaveableObject* SaveableObject::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SaveableObject>(arena);
}

void SaveableObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SaveableObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SaveableObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SaveableObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(save_function_, restore_function_);

#undef ZR_HELPER_
#undef ZR_

}

bool SaveableObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SaveableObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 save_function = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &save_function_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_restore_function;
        break;
      }

      // optional int32 restore_function = 3;
      case 3: {
        if (tag == 24) {
         parse_restore_function:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restore_function_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SaveableObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SaveableObject)
  return false;
#undef DO_
}

void SaveableObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SaveableObject)
  // optional int32 save_function = 2;
  if (this->save_function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->save_function(), output);
  }

  // optional int32 restore_function = 3;
  if (this->restore_function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->restore_function(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SaveableObject)
}

::google::protobuf::uint8* SaveableObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SaveableObject)
  // optional int32 save_function = 2;
  if (this->save_function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->save_function(), target);
  }

  // optional int32 restore_function = 3;
  if (this->restore_function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->restore_function(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SaveableObject)
  return target;
}

int SaveableObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SaveableObject)
  int total_size = 0;

  // optional int32 save_function = 2;
  if (this->save_function() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->save_function());
  }

  // optional int32 restore_function = 3;
  if (this->restore_function() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->restore_function());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveableObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SaveableObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveableObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveableObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SaveableObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SaveableObject)
    MergeFrom(*source);
  }
}

void SaveableObject::MergeFrom(const SaveableObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SaveableObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.save_function() != 0) {
    set_save_function(from.save_function());
  }
  if (from.restore_function() != 0) {
    set_restore_function(from.restore_function());
  }
}

void SaveableObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SaveableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveableObject::CopyFrom(const SaveableObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SaveableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveableObject::IsInitialized() const {

  return true;
}

void SaveableObject::Swap(SaveableObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SaveableObject temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SaveableObject::UnsafeArenaSwap(SaveableObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SaveableObject::InternalSwap(SaveableObject* other) {
  std::swap(save_function_, other->save_function_);
  std::swap(restore_function_, other->restore_function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveableObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveableObject_descriptor_;
  metadata.reflection = SaveableObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveableObject

// optional int32 save_function = 2;
void SaveableObject::clear_save_function() {
  save_function_ = 0;
}
 ::google::protobuf::int32 SaveableObject::save_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveableObject.save_function)
  return save_function_;
}
 void SaveableObject::set_save_function(::google::protobuf::int32 value) {
  
  save_function_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SaveableObject.save_function)
}

// optional int32 restore_function = 3;
void SaveableObject::clear_restore_function() {
  restore_function_ = 0;
}
 ::google::protobuf::int32 SaveableObject::restore_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveableObject.restore_function)
  return restore_function_;
}
 void SaveableObject::set_restore_function(::google::protobuf::int32 value) {
  
  restore_function_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.SaveableObject.restore_function)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
