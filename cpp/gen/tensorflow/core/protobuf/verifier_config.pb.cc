// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/verifier_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/verifier_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* VerifierConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerifierConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VerifierConfig_Toggle_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/protobuf/verifier_config.proto");
  GOOGLE_CHECK(file != NULL);
  VerifierConfig_descriptor_ = file->message_type(0);
  static const int VerifierConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifierConfig, verification_timeout_in_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifierConfig, structure_verifier_),
  };
  VerifierConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VerifierConfig_descriptor_,
      VerifierConfig::default_instance_,
      VerifierConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(VerifierConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifierConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifierConfig, _is_default_instance_));
  VerifierConfig_Toggle_descriptor_ = VerifierConfig_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VerifierConfig_descriptor_, &VerifierConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() {
  delete VerifierConfig::default_instance_;
  delete VerifierConfig_reflection_;
}

void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.tensorflow/core/protobuf/verifier_conf"
    "ig.proto\022\ntensorflow\"\233\001\n\016VerifierConfig\022"
    "\"\n\032verification_timeout_in_ms\030\001 \001(\003\022=\n\022s"
    "tructure_verifier\030\002 \001(\0162!.tensorflow.Ver"
    "ifierConfig.Toggle\"&\n\006Toggle\022\013\n\007DEFAULT\020"
    "\000\022\006\n\002ON\020\001\022\007\n\003OFF\020\002B\177\n\030org.tensorflow.fra"
    "meworkB\024VerifierConfigProtosP\001ZHgithub.c"
    "om/tensorflow/tensorflow/tensorflow/go/c"
    "ore/core_protos_go_proto\370\001\001b\006proto3", 355);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/verifier_config.proto", &protobuf_RegisterTypes);
  VerifierConfig::default_instance_ = new VerifierConfig();
  VerifierConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* VerifierConfig_Toggle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerifierConfig_Toggle_descriptor_;
}
bool VerifierConfig_Toggle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VerifierConfig_Toggle VerifierConfig::DEFAULT;
const VerifierConfig_Toggle VerifierConfig::ON;
const VerifierConfig_Toggle VerifierConfig::OFF;
const VerifierConfig_Toggle VerifierConfig::Toggle_MIN;
const VerifierConfig_Toggle VerifierConfig::Toggle_MAX;
const int VerifierConfig::Toggle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifierConfig::kVerificationTimeoutInMsFieldNumber;
const int VerifierConfig::kStructureVerifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifierConfig::VerifierConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.VerifierConfig)
}

VerifierConfig::VerifierConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.VerifierConfig)
}

void VerifierConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VerifierConfig::VerifierConfig(const VerifierConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.VerifierConfig)
}

void VerifierConfig::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  verification_timeout_in_ms_ = GOOGLE_LONGLONG(0);
  structure_verifier_ = 0;
}

VerifierConfig::~VerifierConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.VerifierConfig)
  SharedDtor();
}

void VerifierConfig::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void VerifierConfig::ArenaDtor(void* object) {
  VerifierConfig* _this = reinterpret_cast< VerifierConfig* >(object);
  (void)_this;
}
void VerifierConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void VerifierConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifierConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerifierConfig_descriptor_;
}

const VerifierConfig& VerifierConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto();
  return *default_instance_;
}

VerifierConfig* VerifierConfig::default_instance_ = NULL;

VerifierConfig* VerifierConfig::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<VerifierConfig>(arena);
}

void VerifierConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.VerifierConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(VerifierConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<VerifierConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(verification_timeout_in_ms_, structure_verifier_);

#undef ZR_HELPER_
#undef ZR_

}

bool VerifierConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.VerifierConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 verification_timeout_in_ms = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &verification_timeout_in_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_structure_verifier;
        break;
      }

      // optional .tensorflow.VerifierConfig.Toggle structure_verifier = 2;
      case 2: {
        if (tag == 16) {
         parse_structure_verifier:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_structure_verifier(static_cast< ::tensorflow::VerifierConfig_Toggle >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.VerifierConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.VerifierConfig)
  return false;
#undef DO_
}

void VerifierConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.VerifierConfig)
  // optional int64 verification_timeout_in_ms = 1;
  if (this->verification_timeout_in_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->verification_timeout_in_ms(), output);
  }

  // optional .tensorflow.VerifierConfig.Toggle structure_verifier = 2;
  if (this->structure_verifier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->structure_verifier(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.VerifierConfig)
}

::google::protobuf::uint8* VerifierConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.VerifierConfig)
  // optional int64 verification_timeout_in_ms = 1;
  if (this->verification_timeout_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->verification_timeout_in_ms(), target);
  }

  // optional .tensorflow.VerifierConfig.Toggle structure_verifier = 2;
  if (this->structure_verifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->structure_verifier(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.VerifierConfig)
  return target;
}

int VerifierConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.VerifierConfig)
  int total_size = 0;

  // optional int64 verification_timeout_in_ms = 1;
  if (this->verification_timeout_in_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->verification_timeout_in_ms());
  }

  // optional .tensorflow.VerifierConfig.Toggle structure_verifier = 2;
  if (this->structure_verifier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->structure_verifier());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifierConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.VerifierConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VerifierConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifierConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.VerifierConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.VerifierConfig)
    MergeFrom(*source);
  }
}

void VerifierConfig::MergeFrom(const VerifierConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.VerifierConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.verification_timeout_in_ms() != 0) {
    set_verification_timeout_in_ms(from.verification_timeout_in_ms());
  }
  if (from.structure_verifier() != 0) {
    set_structure_verifier(from.structure_verifier());
  }
}

void VerifierConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.VerifierConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifierConfig::CopyFrom(const VerifierConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.VerifierConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifierConfig::IsInitialized() const {

  return true;
}

void VerifierConfig::Swap(VerifierConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    VerifierConfig temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void VerifierConfig::UnsafeArenaSwap(VerifierConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void VerifierConfig::InternalSwap(VerifierConfig* other) {
  std::swap(verification_timeout_in_ms_, other->verification_timeout_in_ms_);
  std::swap(structure_verifier_, other->structure_verifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifierConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VerifierConfig_descriptor_;
  metadata.reflection = VerifierConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifierConfig

// optional int64 verification_timeout_in_ms = 1;
void VerifierConfig::clear_verification_timeout_in_ms() {
  verification_timeout_in_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 VerifierConfig::verification_timeout_in_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.VerifierConfig.verification_timeout_in_ms)
  return verification_timeout_in_ms_;
}
 void VerifierConfig::set_verification_timeout_in_ms(::google::protobuf::int64 value) {
  
  verification_timeout_in_ms_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.VerifierConfig.verification_timeout_in_ms)
}

// optional .tensorflow.VerifierConfig.Toggle structure_verifier = 2;
void VerifierConfig::clear_structure_verifier() {
  structure_verifier_ = 0;
}
 ::tensorflow::VerifierConfig_Toggle VerifierConfig::structure_verifier() const {
  // @@protoc_insertion_point(field_get:tensorflow.VerifierConfig.structure_verifier)
  return static_cast< ::tensorflow::VerifierConfig_Toggle >(structure_verifier_);
}
 void VerifierConfig::set_structure_verifier(::tensorflow::VerifierConfig_Toggle value) {
  
  structure_verifier_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.VerifierConfig.structure_verifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
