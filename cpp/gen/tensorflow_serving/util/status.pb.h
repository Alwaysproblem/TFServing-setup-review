// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/status.proto

#ifndef PROTOBUF_tensorflow_5fserving_2futil_2fstatus_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2futil_2fstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/protobuf/error_codes.pb.h"
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tensorflow_5fserving_2futil_2fstatus_2eproto();
void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fstatus_2eproto();
void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fstatus_2eproto();

class StatusProto;

// ===================================================================

class StatusProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.StatusProto) */ {
 public:
  StatusProto();
  virtual ~StatusProto();

  StatusProto(const StatusProto& from);

  inline StatusProto& operator=(const StatusProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusProto& default_instance();

  void UnsafeArenaSwap(StatusProto* other);
  void Swap(StatusProto* other);

  // implements Message ----------------------------------------------

  inline StatusProto* New() const { return New(NULL); }

  StatusProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusProto& from);
  void MergeFrom(const StatusProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusProto* other);
  protected:
  explicit StatusProto(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tensorflow.error.Code error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::tensorflow::error::Code error_code() const;
  void set_error_code(::tensorflow::error::Code value);

  // optional string error_message = 2;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);
  ::std::string* unsafe_arena_release_error_message();
  void unsafe_arena_set_allocated_error_message(
      ::std::string* error_message);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.StatusProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  int error_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2futil_2fstatus_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fstatus_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fstatus_2eproto();

  void InitAsDefaultInstance();
  static StatusProto* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusProto

// optional .tensorflow.error.Code error_code = 1;
inline void StatusProto::clear_error_code() {
  error_code_ = 0;
}
inline ::tensorflow::error::Code StatusProto::error_code() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.StatusProto.error_code)
  return static_cast< ::tensorflow::error::Code >(error_code_);
}
inline void StatusProto::set_error_code(::tensorflow::error::Code value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.StatusProto.error_code)
}

// optional string error_message = 2;
inline void StatusProto::clear_error_message() {
  error_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatusProto::error_message() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.StatusProto.error_message)
  return error_message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusProto::set_error_message(const ::std::string& value) {
  
  error_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.serving.StatusProto.error_message)
}
inline void StatusProto::set_error_message(const char* value) {
  
  error_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.StatusProto.error_message)
}
inline void StatusProto::set_error_message(const char* value,
    size_t size) {
  
  error_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.StatusProto.error_message)
}
inline ::std::string* StatusProto::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.StatusProto.error_message)
  return error_message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatusProto::release_error_message() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.StatusProto.error_message)
  
  return error_message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatusProto::unsafe_arena_release_error_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.StatusProto.error_message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return error_message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatusProto::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.StatusProto.error_message)
}
inline void StatusProto::unsafe_arena_set_allocated_error_message(
    ::std::string* error_message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      error_message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.StatusProto.error_message)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2futil_2fstatus_2eproto__INCLUDED
