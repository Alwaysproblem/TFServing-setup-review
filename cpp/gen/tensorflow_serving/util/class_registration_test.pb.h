// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/class_registration_test.proto

#ifndef PROTOBUF_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();

class Config1;
class Config2;
class MessageWithAny;

// ===================================================================

class Config1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Config1) */ {
 public:
  Config1();
  virtual ~Config1();

  Config1(const Config1& from);

  inline Config1& operator=(const Config1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config1& default_instance();

  void Swap(Config1* other);

  // implements Message ----------------------------------------------

  inline Config1* New() const { return New(NULL); }

  Config1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Config1& from);
  void MergeFrom(const Config1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Config1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_field = 1;
  void clear_string_field();
  static const int kStringFieldFieldNumber = 1;
  const ::std::string& string_field() const;
  void set_string_field(const ::std::string& value);
  void set_string_field(const char* value);
  void set_string_field(const char* value, size_t size);
  ::std::string* mutable_string_field();
  ::std::string* release_string_field();
  void set_allocated_string_field(::std::string* string_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Config1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr string_field_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();

  void InitAsDefaultInstance();
  static Config1* default_instance_;
};
// -------------------------------------------------------------------

class Config2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Config2) */ {
 public:
  Config2();
  virtual ~Config2();

  Config2(const Config2& from);

  inline Config2& operator=(const Config2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config2& default_instance();

  void Swap(Config2* other);

  // implements Message ----------------------------------------------

  inline Config2* New() const { return New(NULL); }

  Config2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Config2& from);
  void MergeFrom(const Config2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Config2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_field = 1;
  void clear_string_field();
  static const int kStringFieldFieldNumber = 1;
  const ::std::string& string_field() const;
  void set_string_field(const ::std::string& value);
  void set_string_field(const char* value);
  void set_string_field(const char* value, size_t size);
  ::std::string* mutable_string_field();
  ::std::string* release_string_field();
  void set_allocated_string_field(::std::string* string_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Config2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr string_field_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();

  void InitAsDefaultInstance();
  static Config2* default_instance_;
};
// -------------------------------------------------------------------

class MessageWithAny : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.MessageWithAny) */ {
 public:
  MessageWithAny();
  virtual ~MessageWithAny();

  MessageWithAny(const MessageWithAny& from);

  inline MessageWithAny& operator=(const MessageWithAny& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageWithAny& default_instance();

  void Swap(MessageWithAny* other);

  // implements Message ----------------------------------------------

  inline MessageWithAny* New() const { return New(NULL); }

  MessageWithAny* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageWithAny& from);
  void MergeFrom(const MessageWithAny& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageWithAny* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Any any_field = 1;
  bool has_any_field() const;
  void clear_any_field();
  static const int kAnyFieldFieldNumber = 1;
  const ::google::protobuf::Any& any_field() const;
  ::google::protobuf::Any* mutable_any_field();
  ::google::protobuf::Any* release_any_field();
  void set_allocated_any_field(::google::protobuf::Any* any_field);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.MessageWithAny)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::Any* any_field_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();

  void InitAsDefaultInstance();
  static MessageWithAny* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Config1

// optional string string_field = 1;
inline void Config1::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config1::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config1.string_field)
  return string_field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config1::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config1.string_field)
}
inline void Config1::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config1.string_field)
}
inline void Config1::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config1.string_field)
}
inline ::std::string* Config1::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config1.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config1::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config1.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config1::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config1.string_field)
}

// -------------------------------------------------------------------

// Config2

// optional string string_field = 1;
inline void Config2::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config2::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config2.string_field)
  return string_field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config2::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config2.string_field)
}
inline void Config2::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config2.string_field)
}
inline void Config2::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config2.string_field)
}
inline ::std::string* Config2::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config2.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config2::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config2.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config2::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config2.string_field)
}

// -------------------------------------------------------------------

// MessageWithAny

// optional .google.protobuf.Any any_field = 1;
inline bool MessageWithAny::has_any_field() const {
  return !_is_default_instance_ && any_field_ != NULL;
}
inline void MessageWithAny::clear_any_field() {
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
}
inline const ::google::protobuf::Any& MessageWithAny::any_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MessageWithAny.any_field)
  return any_field_ != NULL ? *any_field_ : *default_instance_->any_field_;
}
inline ::google::protobuf::Any* MessageWithAny::mutable_any_field() {
  
  if (any_field_ == NULL) {
    any_field_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.MessageWithAny.any_field)
  return any_field_;
}
inline ::google::protobuf::Any* MessageWithAny::release_any_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.MessageWithAny.any_field)
  
  ::google::protobuf::Any* temp = any_field_;
  any_field_ = NULL;
  return temp;
}
inline void MessageWithAny::set_allocated_any_field(::google::protobuf::Any* any_field) {
  delete any_field_;
  any_field_ = any_field;
  if (any_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.MessageWithAny.any_field)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto__INCLUDED
