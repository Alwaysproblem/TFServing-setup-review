// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/class_registration_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow_serving/util/class_registration_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

namespace {

const ::google::protobuf::Descriptor* Config1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Config1_reflection_ = NULL;
const ::google::protobuf::Descriptor* Config2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Config2_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageWithAny_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageWithAny_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow_serving/util/class_registration_test.proto");
  GOOGLE_CHECK(file != NULL);
  Config1_descriptor_ = file->message_type(0);
  static const int Config1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config1, string_field_),
  };
  Config1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Config1_descriptor_,
      Config1::default_instance_,
      Config1_offsets_,
      -1,
      -1,
      -1,
      sizeof(Config1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config1, _is_default_instance_));
  Config2_descriptor_ = file->message_type(1);
  static const int Config2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config2, string_field_),
  };
  Config2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Config2_descriptor_,
      Config2::default_instance_,
      Config2_offsets_,
      -1,
      -1,
      -1,
      sizeof(Config2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config2, _is_default_instance_));
  MessageWithAny_descriptor_ = file->message_type(2);
  static const int MessageWithAny_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageWithAny, any_field_),
  };
  MessageWithAny_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageWithAny_descriptor_,
      MessageWithAny::default_instance_,
      MessageWithAny_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageWithAny),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageWithAny, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageWithAny, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Config1_descriptor_, &Config1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Config2_descriptor_, &Config2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageWithAny_descriptor_, &MessageWithAny::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  delete Config1::default_instance_;
  delete Config1_reflection_;
  delete Config2::default_instance_;
  delete Config2_reflection_;
  delete MessageWithAny::default_instance_;
  delete MessageWithAny_reflection_;
}

void protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n5tensorflow_serving/util/class_registra"
    "tion_test.proto\022\022tensorflow.serving\032\031goo"
    "gle/protobuf/any.proto\"\037\n\007Config1\022\024\n\014str"
    "ing_field\030\001 \001(\t\"\037\n\007Config2\022\024\n\014string_fie"
    "ld\030\001 \001(\t\"9\n\016MessageWithAny\022\'\n\tany_field\030"
    "\001 \001(\0132\024.google.protobuf.Anyb\006proto3", 235);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/util/class_registration_test.proto", &protobuf_RegisterTypes);
  Config1::default_instance_ = new Config1();
  Config2::default_instance_ = new Config2();
  MessageWithAny::default_instance_ = new MessageWithAny();
  Config1::default_instance_->InitAsDefaultInstance();
  Config2::default_instance_->InitAsDefaultInstance();
  MessageWithAny::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto {
  StaticDescriptorInitializer_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto() {
    protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  }
} static_descriptor_initializer_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config1::kStringFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config1::Config1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.Config1)
}

void Config1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Config1::Config1(const Config1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config1)
}

void Config1::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Config1::~Config1() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config1)
  SharedDtor();
}

void Config1::SharedDtor() {
  string_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Config1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Config1_descriptor_;
}

const Config1& Config1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  return *default_instance_;
}

Config1* Config1::default_instance_ = NULL;

Config1* Config1::New(::google::protobuf::Arena* arena) const {
  Config1* n = new Config1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config1::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config1)
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Config1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.Config1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string_field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_field().data(), this->string_field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.Config1.string_field"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.Config1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.Config1)
  return false;
#undef DO_
}

void Config1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.Config1)
  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config1.string_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_field(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.Config1)
}

::google::protobuf::uint8* Config1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config1)
  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config1.string_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_field(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config1)
  return target;
}

int Config1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config1)
  int total_size = 0;

  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_field());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Config1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Config1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config1)
    MergeFrom(*source);
  }
}

void Config1::MergeFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.string_field().size() > 0) {

    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
}

void Config1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config1::CopyFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config1::IsInitialized() const {

  return true;
}

void Config1::Swap(Config1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config1::InternalSwap(Config1* other) {
  string_field_.Swap(&other->string_field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Config1_descriptor_;
  metadata.reflection = Config1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config1

// optional string string_field = 1;
void Config1::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Config1::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config1.string_field)
  return string_field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Config1::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config1.string_field)
}
 void Config1::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config1.string_field)
}
 void Config1::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config1.string_field)
}
 ::std::string* Config1::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config1.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Config1::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config1.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Config1::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config1.string_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config2::kStringFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config2::Config2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.Config2)
}

void Config2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Config2::Config2(const Config2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config2)
}

void Config2::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Config2::~Config2() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config2)
  SharedDtor();
}

void Config2::SharedDtor() {
  string_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Config2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Config2_descriptor_;
}

const Config2& Config2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  return *default_instance_;
}

Config2* Config2::default_instance_ = NULL;

Config2* Config2::New(::google::protobuf::Arena* arena) const {
  Config2* n = new Config2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config2::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config2)
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Config2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.Config2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string_field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_field().data(), this->string_field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.Config2.string_field"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.Config2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.Config2)
  return false;
#undef DO_
}

void Config2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.Config2)
  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config2.string_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_field(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.Config2)
}

::google::protobuf::uint8* Config2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config2)
  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config2.string_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_field(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config2)
  return target;
}

int Config2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config2)
  int total_size = 0;

  // optional string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_field());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Config2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Config2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config2)
    MergeFrom(*source);
  }
}

void Config2::MergeFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.string_field().size() > 0) {

    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
}

void Config2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config2::CopyFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config2::IsInitialized() const {

  return true;
}

void Config2::Swap(Config2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config2::InternalSwap(Config2* other) {
  string_field_.Swap(&other->string_field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Config2_descriptor_;
  metadata.reflection = Config2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config2

// optional string string_field = 1;
void Config2::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Config2::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config2.string_field)
  return string_field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Config2::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config2.string_field)
}
 void Config2::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config2.string_field)
}
 void Config2::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config2.string_field)
}
 ::std::string* Config2::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config2.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Config2::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config2.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Config2::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config2.string_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageWithAny::kAnyFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageWithAny::MessageWithAny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.MessageWithAny)
}

void MessageWithAny::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  any_field_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

MessageWithAny::MessageWithAny(const MessageWithAny& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.MessageWithAny)
}

void MessageWithAny::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  any_field_ = NULL;
}

MessageWithAny::~MessageWithAny() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.MessageWithAny)
  SharedDtor();
}

void MessageWithAny::SharedDtor() {
  if (this != default_instance_) {
    delete any_field_;
  }
}

void MessageWithAny::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageWithAny::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageWithAny_descriptor_;
}

const MessageWithAny& MessageWithAny::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto();
  return *default_instance_;
}

MessageWithAny* MessageWithAny::default_instance_ = NULL;

MessageWithAny* MessageWithAny::New(::google::protobuf::Arena* arena) const {
  MessageWithAny* n = new MessageWithAny;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageWithAny::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.MessageWithAny)
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
}

bool MessageWithAny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.MessageWithAny)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any any_field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.MessageWithAny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.MessageWithAny)
  return false;
#undef DO_
}

void MessageWithAny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.MessageWithAny)
  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->any_field_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.MessageWithAny)
}

::google::protobuf::uint8* MessageWithAny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.MessageWithAny)
  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->any_field_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.MessageWithAny)
  return target;
}

int MessageWithAny::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.MessageWithAny)
  int total_size = 0;

  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->any_field_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageWithAny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.MessageWithAny)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageWithAny* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageWithAny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.MessageWithAny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.MessageWithAny)
    MergeFrom(*source);
  }
}

void MessageWithAny::MergeFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.MessageWithAny)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_any_field()) {
    mutable_any_field()->::google::protobuf::Any::MergeFrom(from.any_field());
  }
}

void MessageWithAny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageWithAny::CopyFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageWithAny::IsInitialized() const {

  return true;
}

void MessageWithAny::Swap(MessageWithAny* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageWithAny::InternalSwap(MessageWithAny* other) {
  std::swap(any_field_, other->any_field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageWithAny::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageWithAny_descriptor_;
  metadata.reflection = MessageWithAny_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageWithAny

// optional .google.protobuf.Any any_field = 1;
bool MessageWithAny::has_any_field() const {
  return !_is_default_instance_ && any_field_ != NULL;
}
void MessageWithAny::clear_any_field() {
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
}
const ::google::protobuf::Any& MessageWithAny::any_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MessageWithAny.any_field)
  return any_field_ != NULL ? *any_field_ : *default_instance_->any_field_;
}
::google::protobuf::Any* MessageWithAny::mutable_any_field() {
  
  if (any_field_ == NULL) {
    any_field_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.MessageWithAny.any_field)
  return any_field_;
}
::google::protobuf::Any* MessageWithAny::release_any_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.MessageWithAny.any_field)
  
  ::google::protobuf::Any* temp = any_field_;
  any_field_ = NULL;
  return temp;
}
void MessageWithAny::set_allocated_any_field(::google::protobuf::Any* any_field) {
  delete any_field_;
  any_field_ = any_field;
  if (any_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.MessageWithAny.any_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
