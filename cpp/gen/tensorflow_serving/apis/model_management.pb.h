// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model_management.proto

#ifndef PROTOBUF_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow_serving/config/model_server_config.pb.h"
#include "tensorflow_serving/util/status.pb.h"
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
void protobuf_AssignDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
void protobuf_ShutdownFile_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();

class ReloadConfigRequest;
class ReloadConfigResponse;

// ===================================================================

class ReloadConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ReloadConfigRequest) */ {
 public:
  ReloadConfigRequest();
  virtual ~ReloadConfigRequest();

  ReloadConfigRequest(const ReloadConfigRequest& from);

  inline ReloadConfigRequest& operator=(const ReloadConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigRequest& default_instance();

  void UnsafeArenaSwap(ReloadConfigRequest* other);
  void Swap(ReloadConfigRequest* other);

  // implements Message ----------------------------------------------

  inline ReloadConfigRequest* New() const { return New(NULL); }

  ReloadConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReloadConfigRequest& from);
  void MergeFrom(const ReloadConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReloadConfigRequest* other);
  protected:
  explicit ReloadConfigRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tensorflow.serving.ModelServerConfig config = 1;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  private:
  void _slow_mutable_config();
  void _slow_set_allocated_config(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::ModelServerConfig** config);
  ::tensorflow::serving::ModelServerConfig* _slow_release_config();
  public:
  const ::tensorflow::serving::ModelServerConfig& config() const;
  ::tensorflow::serving::ModelServerConfig* mutable_config();
  ::tensorflow::serving::ModelServerConfig* release_config();
  void set_allocated_config(::tensorflow::serving::ModelServerConfig* config);
  ::tensorflow::serving::ModelServerConfig* unsafe_arena_release_config();
  void unsafe_arena_set_allocated_config(
      ::tensorflow::serving::ModelServerConfig* config);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ReloadConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool _is_default_instance_;
  ::tensorflow::serving::ModelServerConfig* config_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();

  void InitAsDefaultInstance();
  static ReloadConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReloadConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ReloadConfigResponse) */ {
 public:
  ReloadConfigResponse();
  virtual ~ReloadConfigResponse();

  ReloadConfigResponse(const ReloadConfigResponse& from);

  inline ReloadConfigResponse& operator=(const ReloadConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigResponse& default_instance();

  void UnsafeArenaSwap(ReloadConfigResponse* other);
  void Swap(ReloadConfigResponse* other);

  // implements Message ----------------------------------------------

  inline ReloadConfigResponse* New() const { return New(NULL); }

  ReloadConfigResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReloadConfigResponse& from);
  void MergeFrom(const ReloadConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReloadConfigResponse* other);
  protected:
  explicit ReloadConfigResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tensorflow.serving.StatusProto status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  void _slow_mutable_status();
  void _slow_set_allocated_status(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::StatusProto** status);
  ::tensorflow::serving::StatusProto* _slow_release_status();
  public:
  const ::tensorflow::serving::StatusProto& status() const;
  ::tensorflow::serving::StatusProto* mutable_status();
  ::tensorflow::serving::StatusProto* release_status();
  void set_allocated_status(::tensorflow::serving::StatusProto* status);
  ::tensorflow::serving::StatusProto* unsafe_arena_release_status();
  void unsafe_arena_set_allocated_status(
      ::tensorflow::serving::StatusProto* status);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ReloadConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool _is_default_instance_;
  ::tensorflow::serving::StatusProto* status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
  friend void protobuf_AssignDesc_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto();

  void InitAsDefaultInstance();
  static ReloadConfigResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReloadConfigRequest

// optional .tensorflow.serving.ModelServerConfig config = 1;
inline bool ReloadConfigRequest::has_config() const {
  return !_is_default_instance_ && config_ != NULL;
}
inline void ReloadConfigRequest::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::tensorflow::serving::ModelServerConfig& ReloadConfigRequest::config() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ReloadConfigRequest.config)
  return config_ != NULL ? *config_ : *default_instance_->config_;
}
inline ::tensorflow::serving::ModelServerConfig* ReloadConfigRequest::mutable_config() {
  
  if (config_ == NULL) {
    _slow_mutable_config();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ReloadConfigRequest.config)
  return config_;
}
inline ::tensorflow::serving::ModelServerConfig* ReloadConfigRequest::release_config() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ReloadConfigRequest.config)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_config();
  } else {
    ::tensorflow::serving::ModelServerConfig* temp = config_;
    config_ = NULL;
    return temp;
  }
}
inline  void ReloadConfigRequest::set_allocated_config(::tensorflow::serving::ModelServerConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config != NULL) {
    _slow_set_allocated_config(message_arena, &config);
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ReloadConfigRequest.config)
}

// -------------------------------------------------------------------

// ReloadConfigResponse

// optional .tensorflow.serving.StatusProto status = 1;
inline bool ReloadConfigResponse::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
inline void ReloadConfigResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
inline const ::tensorflow::serving::StatusProto& ReloadConfigResponse::status() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ReloadConfigResponse.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::tensorflow::serving::StatusProto* ReloadConfigResponse::mutable_status() {
  
  if (status_ == NULL) {
    _slow_mutable_status();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ReloadConfigResponse.status)
  return status_;
}
inline ::tensorflow::serving::StatusProto* ReloadConfigResponse::release_status() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ReloadConfigResponse.status)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_status();
  } else {
    ::tensorflow::serving::StatusProto* temp = status_;
    status_ = NULL;
    return temp;
  }
}
inline  void ReloadConfigResponse::set_allocated_status(::tensorflow::serving::StatusProto* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status != NULL) {
    _slow_set_allocated_status(message_arena, &status);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ReloadConfigResponse.status)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto__INCLUDED
