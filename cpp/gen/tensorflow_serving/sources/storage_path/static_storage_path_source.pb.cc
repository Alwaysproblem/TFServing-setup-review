// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/sources/storage_path/static_storage_path_source.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow_serving/sources/storage_path/static_storage_path_source.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

namespace {

const ::google::protobuf::Descriptor* StaticStoragePathSourceConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StaticStoragePathSourceConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() {
  protobuf_AddDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow_serving/sources/storage_path/static_storage_path_source.proto");
  GOOGLE_CHECK(file != NULL);
  StaticStoragePathSourceConfig_descriptor_ = file->message_type(0);
  static const int StaticStoragePathSourceConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticStoragePathSourceConfig, servable_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticStoragePathSourceConfig, version_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticStoragePathSourceConfig, version_path_),
  };
  StaticStoragePathSourceConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StaticStoragePathSourceConfig_descriptor_,
      StaticStoragePathSourceConfig::default_instance_,
      StaticStoragePathSourceConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(StaticStoragePathSourceConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticStoragePathSourceConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticStoragePathSourceConfig, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StaticStoragePathSourceConfig_descriptor_, &StaticStoragePathSourceConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() {
  delete StaticStoragePathSourceConfig::default_instance_;
  delete StaticStoragePathSourceConfig_reflection_;
}

void protobuf_AddDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nHtensorflow_serving/sources/storage_pat"
    "h/static_storage_path_source.proto\022\022tens"
    "orflow.serving\"a\n\035StaticStoragePathSourc"
    "eConfig\022\025\n\rservable_name\030\001 \001(\t\022\023\n\013versio"
    "n_num\030\002 \001(\003\022\024\n\014version_path\030\003 \001(\tb\006proto"
    "3", 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/sources/storage_path/static_storage_path_source.proto", &protobuf_RegisterTypes);
  StaticStoragePathSourceConfig::default_instance_ = new StaticStoragePathSourceConfig();
  StaticStoragePathSourceConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto {
  StaticDescriptorInitializer_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto() {
    protobuf_AddDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto();
  }
} static_descriptor_initializer_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StaticStoragePathSourceConfig::kServableNameFieldNumber;
const int StaticStoragePathSourceConfig::kVersionNumFieldNumber;
const int StaticStoragePathSourceConfig::kVersionPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StaticStoragePathSourceConfig::StaticStoragePathSourceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.StaticStoragePathSourceConfig)
}

void StaticStoragePathSourceConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StaticStoragePathSourceConfig::StaticStoragePathSourceConfig(const StaticStoragePathSourceConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.StaticStoragePathSourceConfig)
}

void StaticStoragePathSourceConfig::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  servable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_num_ = GOOGLE_LONGLONG(0);
  version_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StaticStoragePathSourceConfig::~StaticStoragePathSourceConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.StaticStoragePathSourceConfig)
  SharedDtor();
}

void StaticStoragePathSourceConfig::SharedDtor() {
  servable_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StaticStoragePathSourceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StaticStoragePathSourceConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StaticStoragePathSourceConfig_descriptor_;
}

const StaticStoragePathSourceConfig& StaticStoragePathSourceConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_5fserving_2fsources_2fstorage_5fpath_2fstatic_5fstorage_5fpath_5fsource_2eproto();
  return *default_instance_;
}

StaticStoragePathSourceConfig* StaticStoragePathSourceConfig::default_instance_ = NULL;

StaticStoragePathSourceConfig* StaticStoragePathSourceConfig::New(::google::protobuf::Arena* arena) const {
  StaticStoragePathSourceConfig* n = new StaticStoragePathSourceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StaticStoragePathSourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.StaticStoragePathSourceConfig)
  servable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_num_ = GOOGLE_LONGLONG(0);
  version_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StaticStoragePathSourceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.StaticStoragePathSourceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string servable_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servable_name().data(), this->servable_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.StaticStoragePathSourceConfig.servable_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version_num;
        break;
      }

      // optional int64 version_num = 2;
      case 2: {
        if (tag == 16) {
         parse_version_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_version_path;
        break;
      }

      // optional string version_path = 3;
      case 3: {
        if (tag == 26) {
         parse_version_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_path().data(), this->version_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.StaticStoragePathSourceConfig.version_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.StaticStoragePathSourceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.StaticStoragePathSourceConfig)
  return false;
#undef DO_
}

void StaticStoragePathSourceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.StaticStoragePathSourceConfig)
  // optional string servable_name = 1;
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), this->servable_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.StaticStoragePathSourceConfig.servable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servable_name(), output);
  }

  // optional int64 version_num = 2;
  if (this->version_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->version_num(), output);
  }

  // optional string version_path = 3;
  if (this->version_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_path().data(), this->version_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.StaticStoragePathSourceConfig.version_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.StaticStoragePathSourceConfig)
}

::google::protobuf::uint8* StaticStoragePathSourceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.StaticStoragePathSourceConfig)
  // optional string servable_name = 1;
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), this->servable_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.StaticStoragePathSourceConfig.servable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servable_name(), target);
  }

  // optional int64 version_num = 2;
  if (this->version_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->version_num(), target);
  }

  // optional string version_path = 3;
  if (this->version_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_path().data(), this->version_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.StaticStoragePathSourceConfig.version_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.StaticStoragePathSourceConfig)
  return target;
}

int StaticStoragePathSourceConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.StaticStoragePathSourceConfig)
  int total_size = 0;

  // optional string servable_name = 1;
  if (this->servable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servable_name());
  }

  // optional int64 version_num = 2;
  if (this->version_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version_num());
  }

  // optional string version_path = 3;
  if (this->version_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_path());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StaticStoragePathSourceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.StaticStoragePathSourceConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StaticStoragePathSourceConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StaticStoragePathSourceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.StaticStoragePathSourceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.StaticStoragePathSourceConfig)
    MergeFrom(*source);
  }
}

void StaticStoragePathSourceConfig::MergeFrom(const StaticStoragePathSourceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.StaticStoragePathSourceConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.servable_name().size() > 0) {

    servable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servable_name_);
  }
  if (from.version_num() != 0) {
    set_version_num(from.version_num());
  }
  if (from.version_path().size() > 0) {

    version_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_path_);
  }
}

void StaticStoragePathSourceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.StaticStoragePathSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StaticStoragePathSourceConfig::CopyFrom(const StaticStoragePathSourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.StaticStoragePathSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StaticStoragePathSourceConfig::IsInitialized() const {

  return true;
}

void StaticStoragePathSourceConfig::Swap(StaticStoragePathSourceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StaticStoragePathSourceConfig::InternalSwap(StaticStoragePathSourceConfig* other) {
  servable_name_.Swap(&other->servable_name_);
  std::swap(version_num_, other->version_num_);
  version_path_.Swap(&other->version_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StaticStoragePathSourceConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StaticStoragePathSourceConfig_descriptor_;
  metadata.reflection = StaticStoragePathSourceConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StaticStoragePathSourceConfig

// optional string servable_name = 1;
void StaticStoragePathSourceConfig::clear_servable_name() {
  servable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StaticStoragePathSourceConfig::servable_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
  return servable_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StaticStoragePathSourceConfig::set_servable_name(const ::std::string& value) {
  
  servable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
}
 void StaticStoragePathSourceConfig::set_servable_name(const char* value) {
  
  servable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
}
 void StaticStoragePathSourceConfig::set_servable_name(const char* value, size_t size) {
  
  servable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
}
 ::std::string* StaticStoragePathSourceConfig::mutable_servable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
  return servable_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StaticStoragePathSourceConfig::release_servable_name() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
  
  return servable_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StaticStoragePathSourceConfig::set_allocated_servable_name(::std::string* servable_name) {
  if (servable_name != NULL) {
    
  } else {
    
  }
  servable_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servable_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.StaticStoragePathSourceConfig.servable_name)
}

// optional int64 version_num = 2;
void StaticStoragePathSourceConfig::clear_version_num() {
  version_num_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 StaticStoragePathSourceConfig::version_num() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.StaticStoragePathSourceConfig.version_num)
  return version_num_;
}
 void StaticStoragePathSourceConfig::set_version_num(::google::protobuf::int64 value) {
  
  version_num_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.StaticStoragePathSourceConfig.version_num)
}

// optional string version_path = 3;
void StaticStoragePathSourceConfig::clear_version_path() {
  version_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StaticStoragePathSourceConfig::version_path() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
  return version_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StaticStoragePathSourceConfig::set_version_path(const ::std::string& value) {
  
  version_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
}
 void StaticStoragePathSourceConfig::set_version_path(const char* value) {
  
  version_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
}
 void StaticStoragePathSourceConfig::set_version_path(const char* value, size_t size) {
  
  version_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
}
 ::std::string* StaticStoragePathSourceConfig::mutable_version_path() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
  return version_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StaticStoragePathSourceConfig::release_version_path() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
  
  return version_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StaticStoragePathSourceConfig::set_allocated_version_path(::std::string* version_path) {
  if (version_path != NULL) {
    
  } else {
    
  }
  version_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_path);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.StaticStoragePathSourceConfig.version_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
