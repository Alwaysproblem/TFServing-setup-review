// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/config/platform_config.proto

#include "tensorflow_serving/config/platform_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto;
namespace tensorflow {
namespace serving {
class PlatformConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlatformConfig> _instance;
} _PlatformConfig_default_instance_;
class PlatformConfigMap_PlatformConfigsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlatformConfigMap_PlatformConfigsEntry_DoNotUse> _instance;
} _PlatformConfigMap_PlatformConfigsEntry_DoNotUse_default_instance_;
class PlatformConfigMapDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlatformConfigMap> _instance;
} _PlatformConfigMap_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static void InitDefaultsscc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_PlatformConfig_default_instance_;
    new (ptr) ::tensorflow::serving::PlatformConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::PlatformConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_PlatformConfigMap_default_instance_;
    new (ptr) ::tensorflow::serving::PlatformConfigMap();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::PlatformConfigMap::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto}, {
      &scc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse();
  }
  ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto}, {
      &scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfig, source_adapter_config_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap, platform_configs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::PlatformConfig)},
  { 6, 13, sizeof(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse)},
  { 15, -1, sizeof(::tensorflow::serving::PlatformConfigMap)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_PlatformConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_PlatformConfigMap_default_instance_),
};

const char descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/tensorflow_serving/config/platform_con"
  "fig.proto\022\022tensorflow.serving\032\031google/pr"
  "otobuf/any.proto\"E\n\016PlatformConfig\0223\n\025so"
  "urce_adapter_config\030\001 \001(\0132\024.google.proto"
  "buf.Any\"\305\001\n\021PlatformConfigMap\022T\n\020platfor"
  "m_configs\030\001 \003(\0132:.tensorflow.serving.Pla"
  "tformConfigMap.PlatformConfigsEntry\032Z\n\024P"
  "latformConfigsEntry\022\013\n\003key\030\001 \001(\t\0221\n\005valu"
  "e\030\002 \001(\0132\".tensorflow.serving.PlatformCon"
  "fig:\0028\001B\003\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_sccs[3] = {
  &scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base,
  &scc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base,
  &scc_info_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = {
  false, false, descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto, "tensorflow_serving/config/platform_config.proto", 380,
  &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once, descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_sccs, descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto::offsets,
  file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto, 3, file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto, file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto)), true);
namespace tensorflow {
namespace serving {

// ===================================================================

void PlatformConfig::InitAsDefaultInstance() {
  ::tensorflow::serving::_PlatformConfig_default_instance_._instance.get_mutable()->source_adapter_config_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class PlatformConfig::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& source_adapter_config(const PlatformConfig* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
PlatformConfig::_Internal::source_adapter_config(const PlatformConfig* msg) {
  return *msg->source_adapter_config_;
}
void PlatformConfig::clear_source_adapter_config() {
  if (GetArena() == nullptr && source_adapter_config_ != nullptr) {
    delete source_adapter_config_;
  }
  source_adapter_config_ = nullptr;
}
PlatformConfig::PlatformConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PlatformConfig)
}
PlatformConfig::PlatformConfig(const PlatformConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source_adapter_config()) {
    source_adapter_config_ = new PROTOBUF_NAMESPACE_ID::Any(*from.source_adapter_config_);
  } else {
    source_adapter_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PlatformConfig)
}

void PlatformConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base);
  source_adapter_config_ = nullptr;
}

PlatformConfig::~PlatformConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PlatformConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlatformConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_adapter_config_;
}

void PlatformConfig::ArenaDtor(void* object) {
  PlatformConfig* _this = reinterpret_cast< PlatformConfig* >(object);
  (void)_this;
}
void PlatformConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlatformConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlatformConfig& PlatformConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlatformConfig_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void PlatformConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PlatformConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_adapter_config_ != nullptr) {
    delete source_adapter_config_;
  }
  source_adapter_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlatformConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any source_adapter_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_adapter_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlatformConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PlatformConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any source_adapter_config = 1;
  if (this->has_source_adapter_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source_adapter_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PlatformConfig)
  return target;
}

size_t PlatformConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PlatformConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any source_adapter_config = 1;
  if (this->has_source_adapter_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_adapter_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlatformConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.PlatformConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlatformConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.PlatformConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.PlatformConfig)
    MergeFrom(*source);
  }
}

void PlatformConfig::MergeFrom(const PlatformConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PlatformConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_adapter_config()) {
    _internal_mutable_source_adapter_config()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_source_adapter_config());
  }
}

void PlatformConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.PlatformConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformConfig::CopyFrom(const PlatformConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PlatformConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformConfig::IsInitialized() const {
  return true;
}

void PlatformConfig::InternalSwap(PlatformConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(source_adapter_config_, other->source_adapter_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PlatformConfigMap_PlatformConfigsEntry_DoNotUse::PlatformConfigMap_PlatformConfigsEntry_DoNotUse() {}
PlatformConfigMap_PlatformConfigsEntry_DoNotUse::PlatformConfigMap_PlatformConfigsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PlatformConfigMap_PlatformConfigsEntry_DoNotUse::MergeFrom(const PlatformConfigMap_PlatformConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfigMap_PlatformConfigsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PlatformConfigMap_PlatformConfigsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PlatformConfigMap::InitAsDefaultInstance() {
}
class PlatformConfigMap::_Internal {
 public:
};

PlatformConfigMap::PlatformConfigMap(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  platform_configs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PlatformConfigMap)
}
PlatformConfigMap::PlatformConfigMap(const PlatformConfigMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  platform_configs_.MergeFrom(from.platform_configs_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PlatformConfigMap)
}

void PlatformConfigMap::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base);
}

PlatformConfigMap::~PlatformConfigMap() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PlatformConfigMap)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlatformConfigMap::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PlatformConfigMap::ArenaDtor(void* object) {
  PlatformConfigMap* _this = reinterpret_cast< PlatformConfigMap* >(object);
  (void)_this;
}
void PlatformConfigMap::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlatformConfigMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlatformConfigMap& PlatformConfigMap::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlatformConfigMap_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void PlatformConfigMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PlatformConfigMap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlatformConfigMap::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&platform_configs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlatformConfigMap::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PlatformConfigMap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
  if (!this->_internal_platform_configs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.PlatformConfigMap.PlatformConfigsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_platform_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_platform_configs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::const_iterator
          it = this->_internal_platform_configs().begin();
          it != this->_internal_platform_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PlatformConfigMap_PlatformConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::const_iterator
          it = this->_internal_platform_configs().begin();
          it != this->_internal_platform_configs().end(); ++it) {
        target = PlatformConfigMap_PlatformConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PlatformConfigMap)
  return target;
}

size_t PlatformConfigMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PlatformConfigMap)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_platform_configs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::const_iterator
      it = this->_internal_platform_configs().begin();
      it != this->_internal_platform_configs().end(); ++it) {
    total_size += PlatformConfigMap_PlatformConfigsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlatformConfigMap::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.PlatformConfigMap)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformConfigMap* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlatformConfigMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.PlatformConfigMap)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.PlatformConfigMap)
    MergeFrom(*source);
  }
}

void PlatformConfigMap::MergeFrom(const PlatformConfigMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PlatformConfigMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  platform_configs_.MergeFrom(from.platform_configs_);
}

void PlatformConfigMap::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.PlatformConfigMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformConfigMap::CopyFrom(const PlatformConfigMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PlatformConfigMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformConfigMap::IsInitialized() const {
  return true;
}

void PlatformConfigMap::InternalSwap(PlatformConfigMap* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  platform_configs_.Swap(&other->platform_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfigMap::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfigMap* Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfigMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfigMap >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
