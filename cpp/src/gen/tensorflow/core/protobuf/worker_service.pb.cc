// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker_service.proto

#include "tensorflow/core/protobuf/worker_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace tensorflow {
namespace grpc {
}  // namespace grpc
}  // namespace tensorflow
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto[] =
  "\n-tensorflow/core/protobuf/worker_servic"
  "e.proto\022\017tensorflow.grpc\032%tensorflow/cor"
  "e/protobuf/worker.proto2\360\t\n\rWorkerServic"
  "e\022H\n\tGetStatus\022\034.tensorflow.GetStatusReq"
  "uest\032\035.tensorflow.GetStatusResponse\022f\n\023C"
  "reateWorkerSession\022&.tensorflow.CreateWo"
  "rkerSessionRequest\032\'.tensorflow.CreateWo"
  "rkerSessionResponse\022f\n\023DeleteWorkerSessi"
  "on\022&.tensorflow.DeleteWorkerSessionReque"
  "st\032\'.tensorflow.DeleteWorkerSessionRespo"
  "nse\022T\n\rRegisterGraph\022 .tensorflow.Regist"
  "erGraphRequest\032!.tensorflow.RegisterGrap"
  "hResponse\022Z\n\017DeregisterGraph\022\".tensorflo"
  "w.DeregisterGraphRequest\032#.tensorflow.De"
  "registerGraphResponse\022E\n\010RunGraph\022\033.tens"
  "orflow.RunGraphRequest\032\034.tensorflow.RunG"
  "raphResponse\022Q\n\014CleanupGraph\022\037.tensorflo"
  "w.CleanupGraphRequest\032 .tensorflow.Clean"
  "upGraphResponse\022K\n\nCleanupAll\022\035.tensorfl"
  "ow.CleanupAllRequest\032\036.tensorflow.Cleanu"
  "pAllResponse\022M\n\nRecvTensor\022\035.tensorflow."
  "RecvTensorRequest\032\036.tensorflow.RecvTenso"
  "rResponse\"\000\022B\n\007Logging\022\032.tensorflow.Logg"
  "ingRequest\032\033.tensorflow.LoggingResponse\022"
  "B\n\007Tracing\022\032.tensorflow.TracingRequest\032\033"
  ".tensorflow.TracingResponse\022D\n\007RecvBuf\022\032"
  ".tensorflow.RecvBufRequest\032\033.tensorflow."
  "RecvBufResponse\"\000\022Z\n\017GetStepSequence\022\".t"
  "ensorflow.GetStepSequenceRequest\032#.tenso"
  "rflow.GetStepSequenceResponse\022T\n\rComplet"
  "eGroup\022 .tensorflow.CompleteGroupRequest"
  "\032!.tensorflow.CompleteGroupResponse\022]\n\020C"
  "ompleteInstance\022#.tensorflow.CompleteIns"
  "tanceRequest\032$.tensorflow.CompleteInstan"
  "ceResponseB}\n\032org.tensorflow.distruntime"
  "B\023WorkerServiceProtosP\001ZHgithub.com/tens"
  "orflow/tensorflow/tensorflow/go/core/cor"
  "e_protos_go_protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_deps[1] = {
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_once;
static bool descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto = {
  &descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_initialized, descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto, "tensorflow/core/protobuf/worker_service.proto", 1505,
  &descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_once, descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto, 0, file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto), true);
namespace tensorflow {
namespace grpc {

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
